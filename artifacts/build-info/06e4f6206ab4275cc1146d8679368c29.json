{
	"id": "06e4f6206ab4275cc1146d8679368c29",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20_flat.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: contracts/ERC20.sol\n\npragma solidity ^0.8.0;\n\n\n\ncontract DOLS is ERC20, Ownable {\n    uint256 public tokensPerEth = 1000 * 10 ** decimals();\n    mapping(address => uint256) private _balances;\n\n   constructor() ERC20(\"DOLS\", \"DLS\") {\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount*tokensPerEth);\n    }\n\n  \n    function buyTokens(address receiver, uint256 amount) public virtual payable returns (bool) {  \n    address owner = _msgSender();\n     uint256 amountToBuy = amount * tokensPerEth;\n    _transfer(owner, receiver, amountToBuy);\n    _balances[receiver] += amount;\n     return true;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DOLS": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensPerEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20_flat.sol\":19467:20117  contract DOLS is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20_flat.sol\":19542:19558  10 ** decimals() */\n  tag_3\n    /* \"ERC20_flat.sol\":9957:9959  18 */\n  0x12\n    /* \"ERC20_flat.sol\":19542:19544  10 */\n  0x0a\n    /* \"ERC20_flat.sol\":19542:19558  10 ** decimals() */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"ERC20_flat.sol\":19535:19558  1000 * 10 ** decimals() */\n  tag_5\n  swap1\n    /* \"ERC20_flat.sol\":19535:19539  1000 */\n  0x03e8\n    /* \"ERC20_flat.sol\":19535:19558  1000 * 10 ** decimals() */\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"ERC20_flat.sol\":19505:19558  uint256 public tokensPerEth = 1000 * 10 ** decimals() */\n  0x06\n  sstore\n    /* \"ERC20_flat.sol\":19615:19712  constructor() ERC20(\"DOLS\", \"DLS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n    /* \"ERC20_flat.sol\":8760:8873  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x444f4c53)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x444c53)\n  dup2\n  mstore\n  pop\n    /* \"ERC20_flat.sol\":8834:8839  name_ */\n  dup2\n    /* \"ERC20_flat.sol\":8826:8831  _name */\n  0x03\n    /* \"ERC20_flat.sol\":8826:8839  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"ERC20_flat.sol\":8849:8866  _symbol = symbol_ */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"ERC20_flat.sol\":8849:8856  _symbol */\n  0x04\n  swap1\n    /* \"ERC20_flat.sol\":8849:8866  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"ERC20_flat.sol\":8760:8873  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20_flat.sol\":1815:1847  _transferOwnership(_msgSender()) */\n  tag_16\n    /* \"ERC20_flat.sol\":1834:1846  _msgSender() */\n  tag_17\n    /* \"ERC20_flat.sol\":1834:1844  _msgSender */\n  shl(0x20, tag_18)\n    /* \"ERC20_flat.sol\":1834:1846  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"ERC20_flat.sol\":1815:1833  _transferOwnership */\n  tag_19\n    /* \"ERC20_flat.sol\":1815:1847  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_16:\n    /* \"ERC20_flat.sol\":19660:19705  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  tag_21\n    /* \"ERC20_flat.sol\":19666:19676  msg.sender */\n  caller\n    /* \"ERC20_flat.sol\":19688:19704  10 ** decimals() */\n  tag_23\n    /* \"ERC20_flat.sol\":9957:9959  18 */\n  0x12\n    /* \"ERC20_flat.sol\":19688:19690  10 */\n  0x0a\n    /* \"ERC20_flat.sol\":19688:19704  10 ** decimals() */\n  tag_4\n  jump\t// in\ntag_23:\n    /* \"ERC20_flat.sol\":19678:19704  1000000 * 10 ** decimals() */\n  tag_24\n  swap1\n    /* \"ERC20_flat.sol\":19678:19685  1000000 */\n  0x0f4240\n    /* \"ERC20_flat.sol\":19678:19704  1000000 * 10 ** decimals() */\n  tag_6\n  jump\t// in\ntag_24:\n    /* \"ERC20_flat.sol\":19660:19665  _mint */\n  tag_25\n    /* \"ERC20_flat.sol\":19660:19705  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  jump\t// in\ntag_21:\n    /* \"ERC20_flat.sol\":19467:20117  contract DOLS is ERC20, Ownable {... */\n  jump(tag_56)\n    /* \"ERC20_flat.sol\":698:794  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"ERC20_flat.sol\":777:787  msg.sender */\n  caller\n  swap1\n    /* \"ERC20_flat.sol\":698:794  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"ERC20_flat.sol\":3164:3351  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"ERC20_flat.sol\":3256:3262  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20_flat.sol\":3272:3289  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ERC20_flat.sol\":3256:3262  _owner */\n  swap2\n  and\n  swap2\n    /* \"ERC20_flat.sol\":3272:3289  _owner = newOwner */\n  swap1\n    /* \"ERC20_flat.sol\":3256:3262  _owner */\n  dup3\n  swap1\n    /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ERC20_flat.sol\":3237:3253  address oldOwner */\n  0x00\n  swap1\n    /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ERC20_flat.sol\":3227:3351  {... */\n  pop\n    /* \"ERC20_flat.sol\":3164:3351  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"ERC20_flat.sol\":15197:15586  function _mint(address account, uint256 amount) internal virtual {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20_flat.sol\":15280:15301  account != address(0) */\n  dup3\n  and\n    /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n    /* \"ERC20_flat.sol\":15424:15430  amount */\n  dup1\n    /* \"ERC20_flat.sol\":15408:15420  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20_flat.sol\":15408:15430  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20_flat.sol\":15440:15458  _balances[account] */\n  dup3\n  and\n    /* \"ERC20_flat.sol\":15440:15449  _balances */\n  0x00\n    /* \"ERC20_flat.sol\":15440:15458  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n  dup1\n  sload\n    /* \"ERC20_flat.sol\":15462:15468  amount */\n  dup4\n  swap3\n    /* \"ERC20_flat.sol\":15440:15449  _balances */\n  swap1\n    /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n  tag_38\n  swap1\n    /* \"ERC20_flat.sol\":15462:15468  amount */\n  dup5\n  swap1\n    /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n  tag_37\n  jump\t// in\ntag_38:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"ERC20_flat.sol\":15500:15501  0 */\n  0x00\n  swap1\n    /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20_flat.sol\":15197:15586  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20_flat.sol\":19467:20117  contract DOLS is ERC20, Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_45\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_48\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_51)\ntag_48:\n  dup3\n  0x1f\n  lt\n  tag_49\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_51)\ntag_49:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_51\n  jumpi\n  swap2\n  dup3\n  add\ntag_50:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_51\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_50)\ntag_51:\n  pop\n  tag_52\n  swap3\n  swap2\n  pop\n  tag_53\n  jump\t// in\ntag_52:\n  pop\n  swap1\n  jump\t// out\ntag_53:\ntag_54:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_52\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_54)\n    /* \"#utility.yul\":556:684   */\ntag_37:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:653   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":633:651   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n  pop\n    /* \"#utility.yul\":669:678   */\n  add\n  swap1\n    /* \"#utility.yul\":556:684   */\n  jump\t// out\n    /* \"#utility.yul\":689:1111   */\ntag_63:\n    /* \"#utility.yul\":778:779   */\n  0x01\n    /* \"#utility.yul\":821:826   */\n  dup2\n    /* \"#utility.yul\":778:779   */\n  dup2\n    /* \"#utility.yul\":835:1105   */\ntag_65:\n    /* \"#utility.yul\":856:863   */\n  dup1\n    /* \"#utility.yul\":846:854   */\n  dup6\n    /* \"#utility.yul\":843:864   */\n  gt\n    /* \"#utility.yul\":835:1105   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":915:919   */\n  dup2\n    /* \"#utility.yul\":911:912   */\n  0x00\n    /* \"#utility.yul\":907:913   */\n  not\n    /* \"#utility.yul\":903:920   */\n  div\n    /* \"#utility.yul\":897:901   */\n  dup3\n    /* \"#utility.yul\":894:921   */\n  gt\n    /* \"#utility.yul\":891:944   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":924:942   */\n  tag_69\n  tag_62\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":974:981   */\n  dup1\n    /* \"#utility.yul\":964:972   */\n  dup6\n    /* \"#utility.yul\":960:982   */\n  and\n    /* \"#utility.yul\":957:1012   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":994:1010   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":957:1012   */\ntag_70:\n    /* \"#utility.yul\":1073:1095   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":1033:1048   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":835:1105   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":839:842   */\n  pop\n    /* \"#utility.yul\":689:1111   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1116:1256   */\ntag_4:\n    /* \"#utility.yul\":1174:1179   */\n  0x00\n    /* \"#utility.yul\":1203:1250   */\n  tag_72\n    /* \"#utility.yul\":1244:1248   */\n  0xff\n    /* \"#utility.yul\":1234:1242   */\n  dup5\n    /* \"#utility.yul\":1230:1249   */\n  and\n    /* \"#utility.yul\":1224:1228   */\n  dup4\n    /* \"#utility.yul\":1203:1250   */\n  tag_73\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1194:1250   */\n  swap4\n    /* \"#utility.yul\":1116:1256   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1261:2067   */\ntag_73:\n    /* \"#utility.yul\":1310:1315   */\n  0x00\n    /* \"#utility.yul\":1340:1348   */\n  dup3\n    /* \"#utility.yul\":1330:1410   */\n  tag_75\n  jumpi\n  pop\n    /* \"#utility.yul\":1381:1382   */\n  0x01\n    /* \"#utility.yul\":1395:1400   */\n  jump(tag_74)\n    /* \"#utility.yul\":1330:1410   */\ntag_75:\n    /* \"#utility.yul\":1429:1433   */\n  dup2\n    /* \"#utility.yul\":1419:1495   */\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1480:1485   */\n  jump(tag_74)\n    /* \"#utility.yul\":1419:1495   */\ntag_76:\n    /* \"#utility.yul\":1511:1515   */\n  dup2\n    /* \"#utility.yul\":1529:1530   */\n  0x01\n    /* \"#utility.yul\":1524:1583   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1597:1598   */\n  0x02\n    /* \"#utility.yul\":1592:1722   */\n  dup2\n  eq\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1504:1722   */\n  jump(tag_77)\n    /* \"#utility.yul\":1524:1583   */\ntag_78:\n    /* \"#utility.yul\":1554:1555   */\n  0x01\n    /* \"#utility.yul\":1545:1555   */\n  swap2\n  pop\n    /* \"#utility.yul\":1568:1573   */\n  pop\n  jump(tag_74)\n    /* \"#utility.yul\":1592:1722   */\ntag_79:\n    /* \"#utility.yul\":1629:1632   */\n  0xff\n    /* \"#utility.yul\":1619:1627   */\n  dup5\n    /* \"#utility.yul\":1616:1633   */\n  gt\n    /* \"#utility.yul\":1613:1656   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1636:1654   */\n  tag_81\n  tag_62\n  jump\t// in\ntag_81:\n  pop\n  pop\n    /* \"#utility.yul\":1692:1693   */\n  0x01\n    /* \"#utility.yul\":1678:1694   */\n  dup3\n  shl\n    /* \"#utility.yul\":1707:1712   */\n  jump(tag_74)\n    /* \"#utility.yul\":1504:1722   */\ntag_77:\n  pop\n    /* \"#utility.yul\":1806:1808   */\n  0x20\n    /* \"#utility.yul\":1796:1804   */\n  dup4\n    /* \"#utility.yul\":1793:1809   */\n  lt\n    /* \"#utility.yul\":1787:1790   */\n  0x0133\n    /* \"#utility.yul\":1781:1785   */\n  dup4\n    /* \"#utility.yul\":1778:1791   */\n  lt\n    /* \"#utility.yul\":1774:1810   */\n  and\n    /* \"#utility.yul\":1768:1770   */\n  0x4e\n    /* \"#utility.yul\":1758:1766   */\n  dup5\n    /* \"#utility.yul\":1755:1771   */\n  lt\n    /* \"#utility.yul\":1750:1752   */\n  0x0b\n    /* \"#utility.yul\":1744:1748   */\n  dup5\n    /* \"#utility.yul\":1741:1753   */\n  lt\n    /* \"#utility.yul\":1737:1772   */\n  and\n    /* \"#utility.yul\":1734:1811   */\n  or\n    /* \"#utility.yul\":1731:1890   */\n  iszero\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":1843:1862   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1875:1880   */\n  jump(tag_74)\n    /* \"#utility.yul\":1731:1890   */\ntag_82:\n    /* \"#utility.yul\":1922:1956   */\n  tag_83\n    /* \"#utility.yul\":1947:1955   */\n  dup4\n    /* \"#utility.yul\":1941:1945   */\n  dup4\n    /* \"#utility.yul\":1922:1956   */\n  tag_63\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1992:1998   */\n  dup1\n    /* \"#utility.yul\":1988:1989   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  not\n    /* \"#utility.yul\":1980:1999   */\n  div\n    /* \"#utility.yul\":1971:1978   */\n  dup3\n    /* \"#utility.yul\":1968:2000   */\n  gt\n    /* \"#utility.yul\":1965:2023   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2003:2021   */\n  tag_85\n  tag_62\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2041:2061   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":1261:2067   */\ntag_74:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2072:2240   */\ntag_6:\n    /* \"#utility.yul\":2112:2119   */\n  0x00\n    /* \"#utility.yul\":2178:2179   */\n  dup2\n    /* \"#utility.yul\":2174:2175   */\n  0x00\n    /* \"#utility.yul\":2170:2176   */\n  not\n    /* \"#utility.yul\":2166:2180   */\n  div\n    /* \"#utility.yul\":2163:2164   */\n  dup4\n    /* \"#utility.yul\":2160:2181   */\n  gt\n    /* \"#utility.yul\":2155:2156   */\n  dup3\n    /* \"#utility.yul\":2148:2157   */\n  iszero\n    /* \"#utility.yul\":2141:2158   */\n  iszero\n    /* \"#utility.yul\":2137:2182   */\n  and\n    /* \"#utility.yul\":2134:2205   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2185:2203   */\n  tag_88\n  tag_62\n  jump\t// in\ntag_88:\n  pop\n    /* \"#utility.yul\":2225:2234   */\n  mul\n  swap1\n    /* \"#utility.yul\":2072:2240   */\n  jump\t// out\n    /* \"#utility.yul\":2245:2625   */\ntag_46:\n    /* \"#utility.yul\":2324:2325   */\n  0x01\n    /* \"#utility.yul\":2320:2332   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2367:2379   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2388:2449   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2442:2446   */\n  0x7f\n    /* \"#utility.yul\":2434:2440   */\n  dup3\n    /* \"#utility.yul\":2430:2447   */\n  and\n    /* \"#utility.yul\":2420:2447   */\n  swap2\n  pop\n    /* \"#utility.yul\":2388:2449   */\ntag_90:\n    /* \"#utility.yul\":2495:2497   */\n  0x20\n    /* \"#utility.yul\":2487:2493   */\n  dup3\n    /* \"#utility.yul\":2484:2498   */\n  lt\n    /* \"#utility.yul\":2464:2482   */\n  dup2\n    /* \"#utility.yul\":2461:2499   */\n  eq\n    /* \"#utility.yul\":2458:2619   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2541:2551   */\n  0x4e487b71\n    /* \"#utility.yul\":2536:2539   */\n  0xe0\n    /* \"#utility.yul\":2532:2552   */\n  shl\n    /* \"#utility.yul\":2529:2530   */\n  0x00\n    /* \"#utility.yul\":2522:2553   */\n  mstore\n    /* \"#utility.yul\":2576:2580   */\n  0x22\n    /* \"#utility.yul\":2573:2574   */\n  0x04\n    /* \"#utility.yul\":2566:2581   */\n  mstore\n    /* \"#utility.yul\":2604:2608   */\n  0x24\n    /* \"#utility.yul\":2601:2602   */\n  0x00\n    /* \"#utility.yul\":2594:2609   */\n  revert\n    /* \"#utility.yul\":2458:2619   */\ntag_91:\n  pop\n    /* \"#utility.yul\":2245:2625   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2630:2757   */\ntag_62:\n    /* \"#utility.yul\":2691:2701   */\n  0x4e487b71\n    /* \"#utility.yul\":2686:2689   */\n  0xe0\n    /* \"#utility.yul\":2682:2702   */\n  shl\n    /* \"#utility.yul\":2679:2680   */\n  0x00\n    /* \"#utility.yul\":2672:2703   */\n  mstore\n    /* \"#utility.yul\":2722:2726   */\n  0x11\n    /* \"#utility.yul\":2719:2720   */\n  0x04\n    /* \"#utility.yul\":2712:2727   */\n  mstore\n    /* \"#utility.yul\":2746:2750   */\n  0x24\n    /* \"#utility.yul\":2743:2744   */\n  0x00\n    /* \"#utility.yul\":2736:2751   */\n  revert\n    /* \"#utility.yul\":2630:2757   */\ntag_56:\n    /* \"ERC20_flat.sol\":19467:20117  contract DOLS is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20_flat.sol\":19467:20117  contract DOLS is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcbdd69b5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0752881a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20_flat.sol\":19833:20115  function buyTokens(address receiver, uint256 amount) public virtual payable returns (bool) {  ... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1613:1627   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1606:1628   */\n      iszero\n        /* \"#utility.yul\":1588:1629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"ERC20_flat.sol\":19833:20115  function buyTokens(address receiver, uint256 amount) public virtual payable returns (bool) {  ... */\n      tag_25\n        /* \"#utility.yul\":1448:1635   */\n      jump\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_27\n      tag_35\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n        /* \"ERC20_flat.sol\":10113:10125  _totalSupply */\n      sload(0x02)\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":6305:6330   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6293:6295   */\n      0x20\n        /* \"#utility.yul\":6278:6296   */\n      add\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":6159:6336   */\n      jump\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"ERC20_flat.sol\":9875:9966  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      mload(0x40)\n        /* \"ERC20_flat.sol\":9957:9959  18 */\n      0x12\n        /* \"#utility.yul\":6483:6519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6471:6473   */\n      0x20\n        /* \"#utility.yul\":6456:6474   */\n      add\n        /* \"ERC20_flat.sol\":9875:9966  function decimals() public view virtual override returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":6341:6525   */\n      jump\n        /* \"ERC20_flat.sol\":12655:12891  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_27\n      tag_56\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"ERC20_flat.sol\":19718:19824  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"ERC20_flat.sol\":10190:10315  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_39\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10290:10308  _balances[account] */\n      and\n        /* \"ERC20_flat.sol\":10264:10271  uint256 */\n      0x00\n        /* \"ERC20_flat.sol\":10290:10308  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20_flat.sol\":10190:10315  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20_flat.sol\":2562:2663  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_60\n      tag_71\n      jump\t// in\n        /* \"ERC20_flat.sol\":1930:2015  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n        /* \"ERC20_flat.sol\":2002:2008  _owner */\n      sload(0x05)\n        /* \"ERC20_flat.sol\":1930:2015  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":2002:2008  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1386:1437   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x20\n        /* \"#utility.yul\":1359:1377   */\n      add\n        /* \"ERC20_flat.sol\":1930:2015  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":1240:1443   */\n      jump\n        /* \"ERC20_flat.sol\":9149:9251  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_23\n      tag_79\n      jump\t// in\n        /* \"ERC20_flat.sol\":13378:13807  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_27\n      tag_83\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"ERC20_flat.sol\":10511:10700  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_27\n      tag_88\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"ERC20_flat.sol\":19505:19558  uint256 public tokensPerEth = 1000 * 10 ** decimals() */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_39\n      sload(0x06)\n      dup2\n      jump\n        /* \"ERC20_flat.sol\":10758:10907  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_39\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20_flat.sol\":10847:10854  uint256 */\n      0x00\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":10873:10884  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":10873:10900  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20_flat.sol\":10758:10907  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20_flat.sol\":2812:3010  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_60\n      tag_103\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"ERC20_flat.sol\":8992:9005  string memory */\n      0x60\n        /* \"ERC20_flat.sol\":9024:9029  _name */\n      0x03\n        /* \"ERC20_flat.sol\":9017:9029  return _name */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20_flat.sol\":19833:20115  function buyTokens(address receiver, uint256 amount) public virtual payable returns (bool) {  ... */\n    tag_30:\n        /* \"ERC20_flat.sol\":19998:20010  tokensPerEth */\n      sload(0x06)\n        /* \"ERC20_flat.sol\":19918:19922  bool */\n      0x00\n      swap1\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n      swap1\n        /* \"ERC20_flat.sol\":19918:19922  bool */\n      dup3\n      swap1\n        /* \"ERC20_flat.sol\":19989:20010  amount * tokensPerEth */\n      tag_115\n      swap1\n        /* \"ERC20_flat.sol\":19989:19995  amount */\n      dup6\n        /* \"ERC20_flat.sol\":19989:20010  amount * tokensPerEth */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"ERC20_flat.sol\":19967:20010  uint256 amountToBuy = amount * tokensPerEth */\n      swap1\n      pop\n        /* \"ERC20_flat.sol\":20016:20055  _transfer(owner, receiver, amountToBuy) */\n      tag_117\n        /* \"ERC20_flat.sol\":20026:20031  owner */\n      dup3\n        /* \"ERC20_flat.sol\":20033:20041  receiver */\n      dup7\n        /* \"ERC20_flat.sol\":20043:20054  amountToBuy */\n      dup4\n        /* \"ERC20_flat.sol\":20016:20025  _transfer */\n      tag_118\n        /* \"ERC20_flat.sol\":20016:20055  _transfer(owner, receiver, amountToBuy) */\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":20061:20080  _balances[receiver] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":20061:20070  _balances */\n      0x07\n        /* \"ERC20_flat.sol\":20061:20080  _balances[receiver] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC20_flat.sol\":20061:20090  _balances[receiver] += amount */\n      dup1\n      sload\n        /* \"ERC20_flat.sol\":20084:20090  amount */\n      dup7\n      swap3\n        /* \"ERC20_flat.sol\":20061:20080  _balances[receiver] */\n      swap1\n        /* \"ERC20_flat.sol\":20061:20090  _balances[receiver] += amount */\n      tag_119\n      swap1\n        /* \"ERC20_flat.sol\":20084:20090  amount */\n      dup5\n      swap1\n        /* \"ERC20_flat.sol\":20061:20090  _balances[receiver] += amount */\n      tag_120\n      jump\t// in\n    tag_119:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ERC20_flat.sol\":20104:20108  true */\n      0x01\n      swap7\n        /* \"ERC20_flat.sol\":19833:20115  function buyTokens(address receiver, uint256 amount) public virtual payable returns (bool) {  ... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"ERC20_flat.sol\":11298:11302  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":11352:11384  _approve(owner, spender, amount) */\n      tag_123\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup2\n        /* \"ERC20_flat.sol\":11368:11375  spender */\n      dup6\n        /* \"ERC20_flat.sol\":11377:11383  amount */\n      dup6\n        /* \"ERC20_flat.sol\":11352:11360  _approve */\n      tag_124\n        /* \"ERC20_flat.sol\":11352:11384  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"ERC20_flat.sol\":11401:11405  true */\n      0x01\n      swap4\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n    tag_47:\n        /* \"ERC20_flat.sol\":12101:12105  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":12157:12195  _spendAllowance(from, spender, amount) */\n      tag_128\n        /* \"ERC20_flat.sol\":12173:12177  from */\n      dup6\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup3\n        /* \"ERC20_flat.sol\":12188:12194  amount */\n      dup6\n        /* \"ERC20_flat.sol\":12157:12172  _spendAllowance */\n      tag_129\n        /* \"ERC20_flat.sol\":12157:12195  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_128:\n        /* \"ERC20_flat.sol\":12205:12232  _transfer(from, to, amount) */\n      tag_130\n        /* \"ERC20_flat.sol\":12215:12219  from */\n      dup6\n        /* \"ERC20_flat.sol\":12221:12223  to */\n      dup6\n        /* \"ERC20_flat.sol\":12225:12231  amount */\n      dup6\n        /* \"ERC20_flat.sol\":12205:12214  _transfer */\n      tag_118\n        /* \"ERC20_flat.sol\":12205:12232  _transfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"ERC20_flat.sol\":12249:12253  true */\n      0x01\n      swap5\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":12655:12891  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_57:\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":12743:12747  bool */\n      0x00\n        /* \"ERC20_flat.sol\":12822:12840  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":12822:12833  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":12822:12840  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":12822:12849  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":12743:12747  bool */\n      swap1\n      swap2\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      swap1\n        /* \"ERC20_flat.sol\":12797:12863  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_123\n      swap1\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup3\n      swap1\n        /* \"ERC20_flat.sol\":12822:12849  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"ERC20_flat.sol\":12822:12862  _allowances[owner][spender] + addedValue */\n      tag_135\n      swap1\n        /* \"ERC20_flat.sol\":12852:12862  addedValue */\n      dup8\n      swap1\n        /* \"ERC20_flat.sol\":12822:12862  _allowances[owner][spender] + addedValue */\n      tag_120\n      jump\t// in\n    tag_135:\n        /* \"ERC20_flat.sol\":12797:12805  _approve */\n      tag_124\n        /* \"ERC20_flat.sol\":12797:12863  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":19718:19824  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_62:\n        /* \"ERC20_flat.sol\":2002:2008  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":2142:2165  owner() == _msgSender() */\n      eq\n        /* \"ERC20_flat.sol\":2134:2202  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"ERC20_flat.sol\":19787:19817  _mint(to, amount*tokensPerEth) */\n      tag_143\n        /* \"ERC20_flat.sol\":19793:19795  to */\n      dup3\n        /* \"ERC20_flat.sol\":19804:19816  tokensPerEth */\n      sload(0x06)\n        /* \"ERC20_flat.sol\":19797:19803  amount */\n      dup4\n        /* \"ERC20_flat.sol\":19797:19816  amount*tokensPerEth */\n      tag_144\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_144:\n        /* \"ERC20_flat.sol\":19787:19792  _mint */\n      tag_145\n        /* \"ERC20_flat.sol\":19787:19817  _mint(to, amount*tokensPerEth) */\n      jump\t// in\n    tag_143:\n        /* \"ERC20_flat.sol\":19718:19824  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":2562:2663  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"ERC20_flat.sol\":2002:2008  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":2142:2165  owner() == _msgSender() */\n      eq\n        /* \"ERC20_flat.sol\":2134:2202  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"ERC20_flat.sol\":2626:2656  _transferOwnership(address(0)) */\n      tag_153\n        /* \"ERC20_flat.sol\":2653:2654  0 */\n      0x00\n        /* \"ERC20_flat.sol\":2626:2644  _transferOwnership */\n      tag_154\n        /* \"ERC20_flat.sol\":2626:2656  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_153:\n        /* \"ERC20_flat.sol\":2562:2663  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC20_flat.sol\":9149:9251  function symbol() public view virtual override returns (string memory) {... */\n    tag_79:\n        /* \"ERC20_flat.sol\":9205:9218  string memory */\n      0x60\n        /* \"ERC20_flat.sol\":9237:9244  _symbol */\n      0x04\n        /* \"ERC20_flat.sol\":9230:9244  return _symbol */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n        /* \"ERC20_flat.sol\":13378:13807  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_84:\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":13471:13475  bool */\n      0x00\n        /* \"ERC20_flat.sol\":13552:13570  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":13552:13563  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":13552:13570  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":13552:13579  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":13471:13475  bool */\n      swap1\n      swap2\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      swap1\n        /* \"ERC20_flat.sol\":13597:13632  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5595:5597   */\n      0x20\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5577:5598   */\n      mstore\n        /* \"#utility.yul\":5634:5636   */\n      0x25\n        /* \"#utility.yul\":5614:5632   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5607:5637   */\n      mstore\n        /* \"#utility.yul\":5673:5707   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5653:5671   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5646:5708   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5724:5742   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5717:5752   */\n      mstore\n        /* \"#utility.yul\":5769:5788   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_140\n        /* \"#utility.yul\":5393:5794   */\n      jump\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_164:\n        /* \"ERC20_flat.sol\":13708:13768  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_130\n        /* \"ERC20_flat.sol\":13717:13722  owner */\n      dup3\n        /* \"ERC20_flat.sol\":13724:13731  spender */\n      dup7\n        /* \"ERC20_flat.sol\":13752:13767  subtractedValue */\n      dup7\n        /* \"ERC20_flat.sol\":13733:13749  currentAllowance */\n      dup5\n        /* \"ERC20_flat.sol\":13733:13767  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20_flat.sol\":13708:13716  _approve */\n      tag_124\n        /* \"ERC20_flat.sol\":13708:13768  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":10511:10700  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_89:\n        /* \"ERC20_flat.sol\":10590:10594  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":10644:10672  _transfer(owner, to, amount) */\n      tag_123\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup2\n        /* \"ERC20_flat.sol\":10661:10663  to */\n      dup6\n        /* \"ERC20_flat.sol\":10665:10671  amount */\n      dup6\n        /* \"ERC20_flat.sol\":10644:10653  _transfer */\n      tag_118\n        /* \"ERC20_flat.sol\":10644:10672  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":2812:3010  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"ERC20_flat.sol\":2002:2008  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":2142:2165  owner() == _msgSender() */\n      eq\n        /* \"ERC20_flat.sol\":2134:2202  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":2900:2922  newOwner != address(0) */\n      dup2\n      and\n        /* \"ERC20_flat.sol\":2892:2965  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"ERC20_flat.sol\":2892:2965  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2830:2851   */\n      mstore\n        /* \"#utility.yul\":2887:2889   */\n      0x26\n        /* \"#utility.yul\":2867:2885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2860:2890   */\n      mstore\n        /* \"#utility.yul\":2926:2960   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2906:2924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2899:2961   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2977:2995   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2970:3006   */\n      mstore\n        /* \"#utility.yul\":3023:3042   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":2892:2965  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n        /* \"#utility.yul\":2646:3048   */\n      jump\n        /* \"ERC20_flat.sol\":2892:2965  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_178:\n        /* \"ERC20_flat.sol\":2975:3003  _transferOwnership(newOwner) */\n      tag_181\n        /* \"ERC20_flat.sol\":2994:3002  newOwner */\n      dup2\n        /* \"ERC20_flat.sol\":2975:2993  _transferOwnership */\n      tag_154\n        /* \"ERC20_flat.sol\":2975:3003  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_181:\n        /* \"ERC20_flat.sol\":2812:3010  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":14270:14921  function _transfer(... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14396:14414  from != address(0) */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4784:4786   */\n      0x20\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4766:4787   */\n      mstore\n        /* \"#utility.yul\":4823:4825   */\n      0x25\n        /* \"#utility.yul\":4803:4821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4796:4826   */\n      mstore\n        /* \"#utility.yul\":4862:4896   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4842:4860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4835:4897   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4913:4931   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4906:4941   */\n      mstore\n        /* \"#utility.yul\":4958:4977   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_140\n        /* \"#utility.yul\":4582:4983   */\n      jump\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14474:14490  to != address(0) */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2444:2446   */\n      0x20\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2426:2447   */\n      mstore\n        /* \"#utility.yul\":2483:2485   */\n      0x23\n        /* \"#utility.yul\":2463:2481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2456:2486   */\n      mstore\n        /* \"#utility.yul\":2522:2556   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2502:2520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2495:2557   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2573:2591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2566:2599   */\n      mstore\n        /* \"#utility.yul\":2616:2635   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":2242:2641   */\n      jump\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14612:14627  _balances[from] */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":14590:14609  uint256 fromBalance */\n      0x00\n        /* \"ERC20_flat.sol\":14612:14627  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":14645:14666  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4016:4018   */\n      0x20\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3998:4019   */\n      mstore\n        /* \"#utility.yul\":4055:4057   */\n      0x26\n        /* \"#utility.yul\":4035:4053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4028:4058   */\n      mstore\n        /* \"#utility.yul\":4094:4128   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4074:4092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4067:4129   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":4145:4163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4138:4174   */\n      mstore\n        /* \"#utility.yul\":4191:4210   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_140\n        /* \"#utility.yul\":3814:4216   */\n      jump\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14743:14758  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20_flat.sol\":14743:14752  _balances */\n      0x00\n        /* \"ERC20_flat.sol\":14743:14758  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20_flat.sol\":14761:14781  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20_flat.sol\":14743:14781  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20_flat.sol\":14801:14814  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20_flat.sol\":14775:14781  amount */\n      dup5\n      swap3\n        /* \"ERC20_flat.sol\":14743:14752  _balances */\n      swap1\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      tag_195\n      swap1\n        /* \"ERC20_flat.sol\":14775:14781  amount */\n      dup5\n      swap1\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      tag_120\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20_flat.sol\":14855:14857  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      and\n        /* \"ERC20_flat.sol\":14849:14853  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20_flat.sol\":14859:14865  amount */\n      dup5\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_196\n      swap2\n        /* \"#utility.yul\":6305:6330   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6293:6295   */\n      0x20\n        /* \"#utility.yul\":6278:6296   */\n      add\n      swap1\n        /* \"#utility.yul\":6159:6336   */\n      jump\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20_flat.sol\":14877:14914  _afterTokenTransfer(from, to, amount) */\n    tag_197:\n        /* \"ERC20_flat.sol\":14378:14921  {... */\n      pop\n        /* \"ERC20_flat.sol\":14270:14921  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":16905:17275  function _approve(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17036:17055  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5190:5192   */\n      0x20\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5172:5193   */\n      mstore\n        /* \"#utility.yul\":5229:5231   */\n      0x24\n        /* \"#utility.yul\":5209:5227   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5202:5232   */\n      mstore\n        /* \"#utility.yul\":5268:5302   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5248:5266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5241:5303   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5319:5337   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5312:5346   */\n      mstore\n        /* \"#utility.yul\":5363:5382   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_140\n        /* \"#utility.yul\":4988:5388   */\n      jump\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17114:17135  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3258   */\n      mstore\n        /* \"#utility.yul\":3294:3296   */\n      0x22\n        /* \"#utility.yul\":3274:3292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3267:3297   */\n      mstore\n        /* \"#utility.yul\":3333:3367   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3313:3331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3306:3368   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3384:3402   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3377:3409   */\n      mstore\n        /* \"#utility.yul\":3426:3445   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":3053:3451   */\n      jump\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17185:17203  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":17185:17196  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":17185:17203  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":17185:17212  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20_flat.sol\":17185:17221  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6305:6330   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6278:6296   */\n      add\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20_flat.sol\":16905:17275  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":17552:17993  function _spendAllowance(... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"ERC20_flat.sol\":17682:17706  uint256 currentAllowance */\n      0x00\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":10873:10884  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":10873:10900  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"ERC20_flat.sol\":17748:17785  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"ERC20_flat.sol\":17744:17987  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"ERC20_flat.sol\":17829:17835  amount */\n      dup2\n        /* \"ERC20_flat.sol\":17809:17825  currentAllowance */\n      dup2\n        /* \"ERC20_flat.sol\":17809:17835  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3640:3661   */\n      mstore\n        /* \"#utility.yul\":3697:3699   */\n      0x1d\n        /* \"#utility.yul\":3677:3695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3670:3700   */\n      mstore\n        /* \"#utility.yul\":3736:3767   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3716:3734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3709:3768   */\n      mstore\n        /* \"#utility.yul\":3785:3803   */\n      0x64\n      add\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_140\n        /* \"#utility.yul\":3456:3809   */\n      jump\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_210:\n        /* \"ERC20_flat.sol\":17911:17962  _approve(owner, spender, currentAllowance - amount) */\n      tag_197\n        /* \"ERC20_flat.sol\":17920:17925  owner */\n      dup5\n        /* \"ERC20_flat.sol\":17927:17934  spender */\n      dup5\n        /* \"ERC20_flat.sol\":17955:17961  amount */\n      dup5\n        /* \"ERC20_flat.sol\":17936:17952  currentAllowance */\n      dup5\n        /* \"ERC20_flat.sol\":17936:17961  currentAllowance - amount */\n      sub\n        /* \"ERC20_flat.sol\":17911:17919  _approve */\n      tag_124\n        /* \"ERC20_flat.sol\":17911:17962  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":15197:15586  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":15280:15301  account != address(0) */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6001:6003   */\n      0x20\n        /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5983:6004   */\n      mstore\n        /* \"#utility.yul\":6040:6042   */\n      0x1f\n        /* \"#utility.yul\":6020:6038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6013:6043   */\n      mstore\n        /* \"#utility.yul\":6079:6112   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6059:6077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6052:6113   */\n      mstore\n        /* \"#utility.yul\":6130:6148   */\n      0x64\n      add\n        /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":5799:6154   */\n      jump\n        /* \"ERC20_flat.sol\":15272:15337  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_215:\n        /* \"ERC20_flat.sol\":15424:15430  amount */\n      dup1\n        /* \"ERC20_flat.sol\":15408:15420  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20_flat.sol\":15408:15430  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_219\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":15440:15458  _balances[account] */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":15440:15449  _balances */\n      0x00\n        /* \"ERC20_flat.sol\":15440:15458  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n      dup1\n      sload\n        /* \"ERC20_flat.sol\":15462:15468  amount */\n      dup4\n      swap3\n        /* \"ERC20_flat.sol\":15440:15449  _balances */\n      swap1\n        /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n      tag_220\n      swap1\n        /* \"ERC20_flat.sol\":15462:15468  amount */\n      dup5\n      swap1\n        /* \"ERC20_flat.sol\":15440:15468  _balances[account] += amount */\n      tag_120\n      jump\t// in\n    tag_220:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6305:6330   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"ERC20_flat.sol\":15500:15501  0 */\n      0x00\n      swap1\n        /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":6293:6295   */\n      0x20\n        /* \"#utility.yul\":6278:6296   */\n      add\n        /* \"ERC20_flat.sol\":15483:15520  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20_flat.sol\":19718:19824  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":3164:3351  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"ERC20_flat.sol\":3256:3262  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":3272:3289  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ERC20_flat.sol\":3256:3262  _owner */\n      swap2\n      and\n      swap2\n        /* \"ERC20_flat.sol\":3272:3289  _owner = newOwner */\n      swap1\n        /* \"ERC20_flat.sol\":3256:3262  _owner */\n      dup3\n      swap1\n        /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ERC20_flat.sol\":3237:3253  address oldOwner */\n      0x00\n      swap1\n        /* \"ERC20_flat.sol\":3304:3344  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ERC20_flat.sol\":3227:3351  {... */\n      pop\n        /* \"ERC20_flat.sol\":3164:3351  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_227:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_229:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_66:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_231:\n        /* \"#utility.yul\":343:372   */\n      tag_232\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_227\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_98:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_234:\n        /* \"#utility.yul\":551:580   */\n      tag_235\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_227\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_236\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_227\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_46:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_238:\n        /* \"#utility.yul\":833:862   */\n      tag_239\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_227\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_240\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_227\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_29:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_242:\n        /* \"#utility.yul\":1149:1178   */\n      tag_243\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_227\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1640:2237   */\n    tag_26:\n        /* \"#utility.yul\":1752:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1783   */\n      0x20\n        /* \"#utility.yul\":1810:1812   */\n      dup1\n        /* \"#utility.yul\":1799:1808   */\n      dup4\n        /* \"#utility.yul\":1792:1813   */\n      mstore\n        /* \"#utility.yul\":1842:1848   */\n      dup4\n        /* \"#utility.yul\":1836:1849   */\n      mload\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1880:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1878   */\n      dup6\n        /* \"#utility.yul\":1865:1883   */\n      add\n        /* \"#utility.yul\":1858:1892   */\n      mstore\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1920:2060   */\n    tag_247:\n        /* \"#utility.yul\":1934:1940   */\n      dup2\n        /* \"#utility.yul\":1931:1932   */\n      dup2\n        /* \"#utility.yul\":1928:1941   */\n      lt\n        /* \"#utility.yul\":1920:2060   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2029:2043   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2025:2048   */\n      dup4\n      add\n        /* \"#utility.yul\":2019:2049   */\n      mload\n        /* \"#utility.yul\":1995:2012   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2014:2016   */\n      0x40\n        /* \"#utility.yul\":1991:2017   */\n      add\n        /* \"#utility.yul\":1984:2050   */\n      mstore\n        /* \"#utility.yul\":1949:1959   */\n      dup3\n      add\n        /* \"#utility.yul\":1920:2060   */\n      jump(tag_247)\n    tag_249:\n        /* \"#utility.yul\":2078:2084   */\n      dup2\n        /* \"#utility.yul\":2075:2076   */\n      dup2\n        /* \"#utility.yul\":2072:2085   */\n      gt\n        /* \"#utility.yul\":2069:2160   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2134:2140   */\n      dup4\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2115:2146   */\n      add\n        /* \"#utility.yul\":2108:2150   */\n      mstore\n        /* \"#utility.yul\":2069:2160   */\n    tag_250:\n      pop\n        /* \"#utility.yul\":2221:2223   */\n      0x1f\n        /* \"#utility.yul\":2200:2215   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2196:2225   */\n      and\n        /* \"#utility.yul\":2181:2226   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2228:2230   */\n      0x40\n        /* \"#utility.yul\":2177:2231   */\n      add\n      swap4\n        /* \"#utility.yul\":1640:2237   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4577   */\n    tag_141:\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4405:4426   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4442:4460   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4435:4465   */\n      mstore\n        /* \"#utility.yul\":4501:4535   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4496:4498   */\n      0x40\n        /* \"#utility.yul\":4481:4499   */\n      dup3\n      add\n        /* \"#utility.yul\":4474:4536   */\n      mstore\n        /* \"#utility.yul\":4568:4570   */\n      0x60\n        /* \"#utility.yul\":4553:4571   */\n      add\n      swap1\n        /* \"#utility.yul\":4221:4577   */\n      jump\t// out\n        /* \"#utility.yul\":6530:6658   */\n    tag_120:\n        /* \"#utility.yul\":6570:6573   */\n      0x00\n        /* \"#utility.yul\":6601:6602   */\n      dup3\n        /* \"#utility.yul\":6597:6603   */\n      not\n        /* \"#utility.yul\":6594:6595   */\n      dup3\n        /* \"#utility.yul\":6591:6604   */\n      gt\n        /* \"#utility.yul\":6588:6627   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":6607:6625   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n      pop\n        /* \"#utility.yul\":6643:6652   */\n      add\n      swap1\n        /* \"#utility.yul\":6530:6658   */\n      jump\t// out\n        /* \"#utility.yul\":6663:6831   */\n    tag_116:\n        /* \"#utility.yul\":6703:6710   */\n      0x00\n        /* \"#utility.yul\":6769:6770   */\n      dup2\n        /* \"#utility.yul\":6765:6766   */\n      0x00\n        /* \"#utility.yul\":6761:6767   */\n      not\n        /* \"#utility.yul\":6757:6771   */\n      div\n        /* \"#utility.yul\":6754:6755   */\n      dup4\n        /* \"#utility.yul\":6751:6772   */\n      gt\n        /* \"#utility.yul\":6746:6747   */\n      dup3\n        /* \"#utility.yul\":6739:6748   */\n      iszero\n        /* \"#utility.yul\":6732:6749   */\n      iszero\n        /* \"#utility.yul\":6728:6773   */\n      and\n        /* \"#utility.yul\":6725:6796   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":6776:6794   */\n      tag_269\n      tag_266\n      jump\t// in\n    tag_269:\n      pop\n        /* \"#utility.yul\":6816:6825   */\n      mul\n      swap1\n        /* \"#utility.yul\":6663:6831   */\n      jump\t// out\n        /* \"#utility.yul\":6836:7216   */\n    tag_107:\n        /* \"#utility.yul\":6915:6916   */\n      0x01\n        /* \"#utility.yul\":6911:6923   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6958:6970   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6979:7040   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7033:7037   */\n      0x7f\n        /* \"#utility.yul\":7025:7031   */\n      dup3\n        /* \"#utility.yul\":7021:7038   */\n      and\n        /* \"#utility.yul\":7011:7038   */\n      swap2\n      pop\n        /* \"#utility.yul\":6979:7040   */\n    tag_271:\n        /* \"#utility.yul\":7086:7088   */\n      0x20\n        /* \"#utility.yul\":7078:7084   */\n      dup3\n        /* \"#utility.yul\":7075:7089   */\n      lt\n        /* \"#utility.yul\":7055:7073   */\n      dup2\n        /* \"#utility.yul\":7052:7090   */\n      eq\n        /* \"#utility.yul\":7049:7210   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":7132:7142   */\n      0x4e487b71\n        /* \"#utility.yul\":7127:7130   */\n      0xe0\n        /* \"#utility.yul\":7123:7143   */\n      shl\n        /* \"#utility.yul\":7120:7121   */\n      0x00\n        /* \"#utility.yul\":7113:7144   */\n      mstore\n        /* \"#utility.yul\":7167:7171   */\n      0x22\n        /* \"#utility.yul\":7164:7165   */\n      0x04\n        /* \"#utility.yul\":7157:7172   */\n      mstore\n        /* \"#utility.yul\":7195:7199   */\n      0x24\n        /* \"#utility.yul\":7192:7193   */\n      0x00\n        /* \"#utility.yul\":7185:7200   */\n      revert\n        /* \"#utility.yul\":7049:7210   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":6836:7216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7221:7348   */\n    tag_266:\n        /* \"#utility.yul\":7282:7292   */\n      0x4e487b71\n        /* \"#utility.yul\":7277:7280   */\n      0xe0\n        /* \"#utility.yul\":7273:7293   */\n      shl\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7263:7294   */\n      mstore\n        /* \"#utility.yul\":7313:7317   */\n      0x11\n        /* \"#utility.yul\":7310:7311   */\n      0x04\n        /* \"#utility.yul\":7303:7318   */\n      mstore\n        /* \"#utility.yul\":7337:7341   */\n      0x24\n        /* \"#utility.yul\":7334:7335   */\n      0x00\n        /* \"#utility.yul\":7327:7342   */\n      revert\n\n    auxdata: 0xa26469706673582212202444c16943e684619e880648178ee3005d7385d4561ed8149619646185e5e70f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_844": {
									"entryPoint": null,
									"id": 844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_625": {
									"entryPoint": 313,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 227,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_123": {
									"entryPoint": 231,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2759:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:1",
														"type": ""
													}
												],
												"src": "374:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "631:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "633:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "633:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "633:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:1"
															},
															"nodeType": "YulIf",
															"src": "614:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "662:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "673:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "676:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "662:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:1",
														"type": ""
													}
												],
												"src": "556:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "763:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "778:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "767:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "788:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "797:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "788:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "813:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "821:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "813:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "877:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "922:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "924:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "924:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "924:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "897:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "911:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "907:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "907:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "915:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "903:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "903:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "894:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "894:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "891:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "983:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "985:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "998:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1005:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "994:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "994:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "985:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "964:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "974:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "960:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "960:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "957:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1025:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1037:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1043:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1033:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1033:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1025:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1061:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1077:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1086:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1061:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "846:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "856:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "843:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "865:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "839:3:1",
																"statements": []
															},
															"src": "835:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "717:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "724:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "737:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "744:4:1",
														"type": ""
													}
												],
												"src": "689:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1234:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1244:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1203:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1155:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1161:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1174:5:1",
														"type": ""
													}
												],
												"src": "1116:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1358:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1372:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1381:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1395:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1340:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:16:1"
															},
															"nodeType": "YulIf",
															"src": "1330:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1457:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1480:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1429:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nodeType": "YulIf",
															"src": "1419:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1531:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1545:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1545:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1568:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1524:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1599:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1634:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1636:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1636:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1636:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1619:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1629:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1616:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1616:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "1613:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1669:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1682:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1692:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1678:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1678:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1669:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1707:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1592:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1511:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "1504:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1820:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1834:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1847:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1853:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1843:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1843:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1834:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1875:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1744:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1750:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1741:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1741:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1758:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1768:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1755:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1755:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1781:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1787:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1778:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1778:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1796:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1806:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1793:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1793:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1774:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1734:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:77:1"
															},
															"nodeType": "YulIf",
															"src": "1731:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1941:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1947:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1922:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1903:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1912:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2003:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1971:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1988:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1984:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1984:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1968:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:32:1"
															},
															"nodeType": "YulIf",
															"src": "1965:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2045:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2054:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2032:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1291:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1297:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1310:5:1",
														"type": ""
													}
												],
												"src": "1261:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2185:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2185:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2185:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2155:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2148:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2141:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2163:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2174:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2170:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2170:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2178:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2166:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2160:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2137:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:45:1"
															},
															"nodeType": "YulIf",
															"src": "2134:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2229:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2232:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2214:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2103:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2106:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2112:7:1",
														"type": ""
													}
												],
												"src": "2072:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2300:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2310:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2327:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2341:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2371:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2345:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2418:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2420:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2434:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2442:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2430:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2420:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2398:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:26:1"
															},
															"nodeType": "YulIf",
															"src": "2388:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2508:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2536:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2541:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2532:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2532:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2522:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2522:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2573:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2576:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2566:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2601:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2604:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2594:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2594:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2594:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2464:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2484:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2461:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:38:1"
															},
															"nodeType": "YulIf",
															"src": "2458:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2280:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2289:6:1",
														"type": ""
													}
												],
												"src": "2245:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2686:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2691:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2672:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2719:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2722:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2736:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2630:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x12 PUSH1 0x12 PUSH1 0xA PUSH3 0x32B JUMP JUMPDEST PUSH3 0x20 SWAP1 PUSH2 0x3E8 PUSH3 0x3F9 JUMP JUMPDEST PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x444F4C53 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444C53 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x82 SWAP3 SWAP2 SWAP1 PUSH3 0x221 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x98 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x221 JUMP JUMPDEST POP POP POP PUSH3 0xB5 PUSH3 0xAF PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE7 JUMP JUMPDEST PUSH3 0xDD CALLER PUSH3 0xC8 PUSH1 0x12 PUSH1 0xA PUSH3 0x32B JUMP JUMPDEST PUSH3 0xD7 SWAP1 PUSH3 0xF4240 PUSH3 0x3F9 JUMP JUMPDEST PUSH3 0x139 JUMP JUMPDEST PUSH3 0x46E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A8 SWAP2 SWAP1 PUSH3 0x2C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1D7 SWAP1 DUP5 SWAP1 PUSH3 0x2C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x22F SWAP1 PUSH3 0x41B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x253 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x29E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x26E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x29E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x29E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x29E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x281 JUMP JUMPDEST POP PUSH3 0x2AC SWAP3 SWAP2 POP PUSH3 0x2B0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2B1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2DD PUSH3 0x458 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x323 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x307 JUMPI PUSH3 0x307 PUSH3 0x458 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x315 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x2E7 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33C PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x354 JUMPI POP PUSH1 0x1 PUSH3 0x3F3 JUMP JUMPDEST DUP2 PUSH3 0x363 JUMPI POP PUSH1 0x0 PUSH3 0x3F3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x37C JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x387 JUMPI PUSH3 0x3A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x39B JUMPI PUSH3 0x39B PUSH3 0x458 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x3F3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x3CC JUMPI POP DUP2 DUP2 EXP PUSH3 0x3F3 JUMP JUMPDEST PUSH3 0x3D8 DUP4 DUP4 PUSH3 0x2E2 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3EF JUMPI PUSH3 0x3EF PUSH3 0x458 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x416 JUMPI PUSH3 0x416 PUSH3 0x458 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x430 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x452 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD56 DUP1 PUSH3 0x47E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x752881A EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x53C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0xCCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH2 0x3F8 SWAP1 DUP6 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 DUP3 DUP7 DUP4 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x42D SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x856 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x463 DUP6 DUP3 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x46E DUP6 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x44B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x4B3 SWAP1 DUP8 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x502 DUP3 PUSH1 0x6 SLOAD DUP4 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x0 PUSH2 0xAE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCCF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x46E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x856 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7FB SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x847 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x850 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x850 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA9B SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6E DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC6 DUP5 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP PUSH2 0xBD4 PUSH1 0x20 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC00 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC3B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC1F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAB PUSH2 0xD0A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCCA PUSH2 0xD0A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DIFFICULTY 0xC1 PUSH10 0x43E684619E880648178E 0xE3 STOP 0x5D PUSH20 0x85D4561ED8149619646185E5E70F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "19467:650:0:-:0;;;19542:16;9957:2;19542;:16;:::i;:::-;19535:23;;:4;:23;:::i;:::-;19505:53;;19615:97;;;;;;;;;;8760:113;;;;;;;;;;;;;-1:-1:-1;;;8760:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;8760:113:0;;;8834:5;8826;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8849:17:0;;;;:7;;:17;;;;;:::i;:::-;;8760:113;;1815:32;1834:12;:10;;;:12;;:::i;:::-;1815:18;:32::i;:::-;19660:45:::1;19666:10;19688:16;9957:2:::0;19688::::1;:16;:::i;:::-;19678:26;::::0;:7:::1;:26;:::i;:::-;19660:5;:45::i;:::-;19467:650:::0;;698:96;777:10;;698:96::o;3164:187::-;3256:6;;;-1:-1:-1;;;;;3272:17:0;;;-1:-1:-1;;;;;;3272:17:0;;;;;;;3304:40;;3256:6;;;3272:17;3256:6;;3304:40;;3237:16;;3304:40;3227:124;3164:187;:::o;15197:389::-;-1:-1:-1;;;;;15280:21:0;;15272:65;;;;-1:-1:-1;;;15272:65:0;;216:2:1;15272:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;15272:65:0;;;;;;;;15424:6;15408:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15440:18:0;;:9;:18;;;;;;;;;;:28;;15462:6;;15440:9;:28;;15462:6;;15440:28;:::i;:::-;;;;-1:-1:-1;;15483:37:0;;520:25:1;;;-1:-1:-1;;;;;15483:37:0;;;15500:1;;15483:37;;508:2:1;493:18;15483:37:0;;;;;;;15197:389;;:::o;19467:650::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19467:650:0;;;-1:-1:-1;19467:650:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:128:1;596:3;627:1;623:6;620:1;617:13;614:39;;;633:18;;:::i;:::-;-1:-1:-1;669:9:1;;556:128::o;689:422::-;778:1;821:5;778:1;835:270;856:7;846:8;843:21;835:270;;;915:4;911:1;907:6;903:17;897:4;894:27;891:53;;;924:18;;:::i;:::-;974:7;964:8;960:22;957:55;;;994:16;;;;957:55;1073:22;;;;1033:15;;;;835:270;;;839:3;689:422;;;;;:::o;1116:140::-;1174:5;1203:47;1244:4;1234:8;1230:19;1224:4;1203:47;:::i;:::-;1194:56;1116:140;-1:-1:-1;;;1116:140:1:o;1261:806::-;1310:5;1340:8;1330:80;;-1:-1:-1;1381:1:1;1395:5;;1330:80;1429:4;1419:76;;-1:-1:-1;1466:1:1;1480:5;;1419:76;1511:4;1529:1;1524:59;;;;1597:1;1592:130;;;;1504:218;;1524:59;1554:1;1545:10;;1568:5;;;1592:130;1629:3;1619:8;1616:17;1613:43;;;1636:18;;:::i;:::-;-1:-1:-1;;1692:1:1;1678:16;;1707:5;;1504:218;;1806:2;1796:8;1793:16;1787:3;1781:4;1778:13;1774:36;1768:2;1758:8;1755:16;1750:2;1744:4;1741:12;1737:35;1734:77;1731:159;;;-1:-1:-1;1843:19:1;;;1875:5;;1731:159;1922:34;1947:8;1941:4;1922:34;:::i;:::-;1992:6;1988:1;1984:6;1980:19;1971:7;1968:32;1965:58;;;2003:18;;:::i;:::-;2041:20;;-1:-1:-1;1261:806:1;;;;;:::o;2072:168::-;2112:7;2178:1;2174;2170:6;2166:14;2163:1;2160:21;2155:1;2148:9;2141:17;2137:45;2134:71;;;2185:18;;:::i;:::-;-1:-1:-1;2225:9:1;;2072:168::o;2245:380::-;2324:1;2320:12;;;;2367;;;2388:61;;2442:4;2434:6;2430:17;2420:27;;2388:61;2495:2;2487:6;2484:14;2464:18;2461:38;2458:161;;;2541:10;2536:3;2532:20;2529:1;2522:31;2576:4;2573:1;2566:15;2604:4;2601:1;2594:15;2458:161;;2245:380;;;:::o;2630:127::-;2691:10;2686:3;2682:20;2679:1;2672:31;2722:4;2719:1;2712:15;2746:4;2743:1;2736:15;2630:127;19467:650:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_742": {
									"entryPoint": 2134,
									"id": 742,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_625": {
									"entryPoint": 2566,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_785": {
									"entryPoint": 2426,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_123": {
									"entryPoint": 2789,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_569": {
									"entryPoint": 1670,
									"id": 569,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": null,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 1085,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_896": {
									"entryPoint": 996,
									"id": 896,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_492": {
									"entryPoint": 1355,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_450": {
									"entryPoint": 1145,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_861": {
									"entryPoint": 1208,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_275": {
									"entryPoint": 850,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_80": {
									"entryPoint": 1286,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_285": {
									"entryPoint": 1340,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensPerEth_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 1109,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_103": {
									"entryPoint": 1515,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_344": {
									"entryPoint": 1501,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7350:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1351:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1424:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1429:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1420:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1433:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1416:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1240:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1620:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1613:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1606:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1534:4:1",
														"type": ""
													}
												],
												"src": "1448:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1781:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1775:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1810:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1826:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1901:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1910:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1905:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1999:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2010:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1995:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1995:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2014:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1991:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1991:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2033:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2041:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2029:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2029:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2045:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2025:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2025:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2019:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2019:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1942:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1944:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1953:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1956:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1944:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1924:3:1",
																"statements": []
															},
															"src": "1920:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2123:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2134:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2119:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2143:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2115:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2115:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2108:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2108:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:1"
															},
															"nodeType": "YulIf",
															"src": "2069:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2169:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2204:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2212:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2200:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2200:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2221:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2217:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1730:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1640:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2522:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2593:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2407:4:1",
														"type": ""
													}
												],
												"src": "2242:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2926:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2997:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2797:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:1",
														"type": ""
													}
												],
												"src": "2646:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3333:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3404:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3418:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3418:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3218:4:1",
														"type": ""
													}
												],
												"src": "3053:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3736:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3621:4:1",
														"type": ""
													}
												],
												"src": "3456:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4005:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4016:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3998:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4035:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4028:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4089:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4094:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4165:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4138:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4183:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4195:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4206:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4183:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3965:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3979:4:1",
														"type": ""
													}
												],
												"src": "3814:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4405:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4496:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4481:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4501:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4474:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4545:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4545:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4372:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4386:4:1",
														"type": ""
													}
												],
												"src": "4221:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4756:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4766:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4803:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4796:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4846:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4862:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4928:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4933:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4906:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4950:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4950:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4733:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4747:4:1",
														"type": ""
													}
												],
												"src": "4582:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5224:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5202:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5268:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5334:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5339:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5312:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5355:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5367:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5355:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5139:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "4988:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5567:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5584:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5577:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5618:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5629:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5614:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5634:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5607:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5607:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5668:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5653:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5673:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5646:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5728:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5739:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5724:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5744:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5717:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5761:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5784:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5544:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5558:4:1",
														"type": ""
													}
												],
												"src": "5393:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5973:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5990:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5983:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6035:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6020:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6013:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6074:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6059:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6079:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6052:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6122:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5950:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5964:4:1",
														"type": ""
													}
												],
												"src": "5799:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6260:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6270:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6312:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6323:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6305:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6229:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6240:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6251:4:1",
														"type": ""
													}
												],
												"src": "6159:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6438:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6448:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6460:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6448:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6490:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6505:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6513:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6501:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6407:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6418:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6429:4:1",
														"type": ""
													}
												],
												"src": "6341:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6578:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6605:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6607:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6607:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6607:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6594:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6601:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:13:1"
															},
															"nodeType": "YulIf",
															"src": "6588:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6636:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6647:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6650:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6561:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6564:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6570:3:1",
														"type": ""
													}
												],
												"src": "6530:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6715:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6774:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6776:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6776:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6776:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6746:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6739:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6739:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6732:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6754:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6765:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6761:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6761:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6769:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6751:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:45:1"
															},
															"nodeType": "YulIf",
															"src": "6725:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6805:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6820:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6823:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6816:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6805:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6694:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6697:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6703:7:1",
														"type": ""
													}
												],
												"src": "6663:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6891:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6901:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6915:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6918:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6932:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6962:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6936:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7009:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7011:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7025:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7033:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7021:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7021:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7011:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6989:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:26:1"
															},
															"nodeType": "YulIf",
															"src": "6979:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7099:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7120:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7127:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7132:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7123:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7123:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7113:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7113:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7113:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7164:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7167:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7157:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7157:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7192:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7195:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7185:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7185:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7185:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7055:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7078:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7075:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7075:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:38:1"
															},
															"nodeType": "YulIf",
															"src": "7049:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6871:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6880:6:1",
														"type": ""
													}
												],
												"src": "6836:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7253:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7270:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7277:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7273:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7263:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7303:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7337:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7327:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7327:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7221:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c806370a0823111610095578063a457c2d711610064578063a457c2d714610296578063a9059cbb146102b6578063cbdd69b5146102d6578063dd62ed3e146102ec578063f2fde38b1461033257600080fd5b806370a082311461020e578063715018a6146102445780638da5cb5b1461025957806395d89b411461028157600080fd5b806323b872dd116100d157806323b872dd14610190578063313ce567146101b057806339509351146101cc57806340c10f19146101ec57600080fd5b806306fdde03146101035780630752881a1461012e578063095ea7b31461015157806318160ddd14610171575b600080fd5b34801561010f57600080fd5b50610118610352565b6040516101259190610c0e565b60405180910390f35b61014161013c366004610be4565b6103e4565b6040519015158152602001610125565b34801561015d57600080fd5b5061014161016c366004610be4565b61043d565b34801561017d57600080fd5b506002545b604051908152602001610125565b34801561019c57600080fd5b506101416101ab366004610ba8565b610455565b3480156101bc57600080fd5b5060405160128152602001610125565b3480156101d857600080fd5b506101416101e7366004610be4565b610479565b3480156101f857600080fd5b5061020c610207366004610be4565b6104b8565b005b34801561021a57600080fd5b50610182610229366004610b53565b6001600160a01b031660009081526020819052604090205490565b34801561025057600080fd5b5061020c610506565b34801561026557600080fd5b506005546040516001600160a01b039091168152602001610125565b34801561028d57600080fd5b5061011861053c565b3480156102a257600080fd5b506101416102b1366004610be4565b61054b565b3480156102c257600080fd5b506101416102d1366004610be4565b6105dd565b3480156102e257600080fd5b5061018260065481565b3480156102f857600080fd5b50610182610307366004610b75565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561033e57600080fd5b5061020c61034d366004610b53565b6105eb565b60606003805461036190610ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90610ccf565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b5050505050905090565b600654600090339082906103f89085610cb0565b9050610405828683610686565b6001600160a01b0385166000908152600760205260408120805486929061042d908490610c98565b9091555060019695505050505050565b60003361044b818585610856565b5060019392505050565b60003361046385828561097a565b61046e858585610686565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061044b90829086906104b3908790610c98565b610856565b6005546001600160a01b031633146104eb5760405162461bcd60e51b81526004016104e290610c63565b60405180910390fd5b61050282600654836104fd9190610cb0565b610a06565b5050565b6005546001600160a01b031633146105305760405162461bcd60e51b81526004016104e290610c63565b61053a6000610ae5565b565b60606004805461036190610ccf565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e2565b61046e8286868403610856565b60003361044b818585610686565b6005546001600160a01b031633146106155760405162461bcd60e51b81526004016104e290610c63565b6001600160a01b03811661067a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e2565b61068381610ae5565b50565b6001600160a01b0383166106ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e2565b6001600160a01b03821661074c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e2565b6001600160a01b038316600090815260208190526040902054818110156107c45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e2565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107fb908490610c98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084791815260200190565b60405180910390a35b50505050565b6001600160a01b0383166108b85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e2565b6001600160a01b0382166109195760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461085057818110156109f95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e2565b6108508484848403610856565b6001600160a01b038216610a5c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e2565b8060026000828254610a6e9190610c98565b90915550506001600160a01b03821660009081526020819052604081208054839290610a9b908490610c98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610b4e57600080fd5b919050565b600060208284031215610b6557600080fd5b610b6e82610b37565b9392505050565b60008060408385031215610b8857600080fd5b610b9183610b37565b9150610b9f60208401610b37565b90509250929050565b600080600060608486031215610bbd57600080fd5b610bc684610b37565b9250610bd460208501610b37565b9150604084013590509250925092565b60008060408385031215610bf757600080fd5b610c0083610b37565b946020939093013593505050565b600060208083528351808285015260005b81811015610c3b57858101830151858201604001528201610c1f565b81811115610c4d576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cab57610cab610d0a565b500190565b6000816000190483118215151615610cca57610cca610d0a565b500290565b600181811c90821680610ce357607f821691505b60208210811415610d0457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202444c16943e684619e880648178ee3005d7385d4561ed8149619646185e5e70f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x752881A EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x53C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20C PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0xCCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH2 0x3F8 SWAP1 DUP6 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 DUP3 DUP7 DUP4 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x42D SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x856 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x463 DUP6 DUP3 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x46E DUP6 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x44B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x4B3 SWAP1 DUP8 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x502 DUP3 PUSH1 0x6 SLOAD DUP4 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x0 PUSH2 0xAE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0xCCF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x46E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x856 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7FB SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x847 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x850 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x850 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA9B SWAP1 DUP5 SWAP1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6E DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC6 DUP5 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP PUSH2 0xBD4 PUSH1 0x20 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC00 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC3B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC1F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAB PUSH2 0xD0A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCCA PUSH2 0xD0A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DIFFICULTY 0xC1 PUSH10 0x43E684619E880648178E 0xE3 STOP 0x5D PUSH20 0x85D4561ED8149619646185E5E70F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "19467:650:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19833:282;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:1;;1606:22;1588:41;;1576:2;1561:18;19833:282:0;1448:187:1;11215:197:0;;;;;;;;;;-1:-1:-1;11215:197:0;;;;;:::i;:::-;;:::i;10026:106::-;;;;;;;;;;-1:-1:-1;10113:12:0;;10026:106;;;6305:25:1;;;6293:2;6278:18;10026:106:0;6159:177:1;11974:286:0;;;;;;;;;;-1:-1:-1;11974:286:0;;;;;:::i;:::-;;:::i;9875:91::-;;;;;;;;;;-1:-1:-1;9875:91:0;;9957:2;6483:36:1;;6471:2;6456:18;9875:91:0;6341:184:1;12655:236:0;;;;;;;;;;-1:-1:-1;12655:236:0;;;;;:::i;:::-;;:::i;19718:106::-;;;;;;;;;;-1:-1:-1;19718:106:0;;;;;:::i;:::-;;:::i;:::-;;10190:125;;;;;;;;;;-1:-1:-1;10190:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;10290:18:0;10264:7;10290:18;;;;;;;;;;;;10190:125;2562:101;;;;;;;;;;;;;:::i;1930:85::-;;;;;;;;;;-1:-1:-1;2002:6:0;;1930:85;;-1:-1:-1;;;;;2002:6:0;;;1386:51:1;;1374:2;1359:18;1930:85:0;1240:203:1;9149:102:0;;;;;;;;;;;;;:::i;13378:429::-;;;;;;;;;;-1:-1:-1;13378:429:0;;;;;:::i;:::-;;:::i;10511:189::-;;;;;;;;;;-1:-1:-1;10511:189:0;;;;;:::i;:::-;;:::i;19505:53::-;;;;;;;;;;;;;;;;10758:149;;;;;;;;;;-1:-1:-1;10758:149:0;;;;;:::i;:::-;-1:-1:-1;;;;;10873:18:0;;;10847:7;10873:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;10758:149;2812:198;;;;;;;;;;-1:-1:-1;2812:198:0;;;;;:::i;:::-;;:::i;8938:98::-;8992:13;9024:5;9017:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:98;:::o;19833:282::-;19998:12;;19918:4;;777:10;;19918:4;;19989:21;;:6;:21;:::i;:::-;19967:43;;20016:39;20026:5;20033:8;20043:11;20016:9;:39::i;:::-;-1:-1:-1;;;;;20061:19:0;;;;;;:9;:19;;;;;:29;;20084:6;;20061:19;:29;;20084:6;;20061:29;:::i;:::-;;;;-1:-1:-1;20104:4:0;;19833:282;-1:-1:-1;;;;;;19833:282:0:o;11215:197::-;11298:4;777:10;11352:32;777:10;11368:7;11377:6;11352:8;:32::i;:::-;-1:-1:-1;11401:4:0;;11215:197;-1:-1:-1;;;11215:197:0:o;11974:286::-;12101:4;777:10;12157:38;12173:4;777:10;12188:6;12157:15;:38::i;:::-;12205:27;12215:4;12221:2;12225:6;12205:9;:27::i;:::-;-1:-1:-1;12249:4:0;;11974:286;-1:-1:-1;;;;11974:286:0:o;12655:236::-;777:10;12743:4;12822:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;12822:27:0;;;;;;;;;;12743:4;;777:10;12797:66;;777:10;;12822:27;;:40;;12852:10;;12822:40;:::i;:::-;12797:8;:66::i;19718:106::-;2002:6;;-1:-1:-1;;;;;2002:6:0;777:10;2142:23;2134:68;;;;-1:-1:-1;;;2134:68:0;;;;;;;:::i;:::-;;;;;;;;;19787:30:::1;19793:2;19804:12;;19797:6;:19;;;;:::i;:::-;19787:5;:30::i;:::-;19718:106:::0;;:::o;2562:101::-;2002:6;;-1:-1:-1;;;;;2002:6:0;777:10;2142:23;2134:68;;;;-1:-1:-1;;;2134:68:0;;;;;;;:::i;:::-;2626:30:::1;2653:1;2626:18;:30::i;:::-;2562:101::o:0;9149:102::-;9205:13;9237:7;9230:14;;;;;:::i;13378:429::-;777:10;13471:4;13552:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;13552:27:0;;;;;;;;;;13471:4;;777:10;13597:35;;;;13589:85;;;;-1:-1:-1;;;13589:85:0;;5595:2:1;13589:85:0;;;5577:21:1;5634:2;5614:18;;;5607:30;5673:34;5653:18;;;5646:62;-1:-1:-1;;;5724:18:1;;;5717:35;5769:19;;13589:85:0;5393:401:1;13589:85:0;13708:60;13717:5;13724:7;13752:15;13733:16;:34;13708:8;:60::i;10511:189::-;10590:4;777:10;10644:28;777:10;10661:2;10665:6;10644:9;:28::i;2812:198::-;2002:6;;-1:-1:-1;;;;;2002:6:0;777:10;2142:23;2134:68;;;;-1:-1:-1;;;2134:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2900:22:0;::::1;2892:73;;;::::0;-1:-1:-1;;;2892:73:0;;2848:2:1;2892:73:0::1;::::0;::::1;2830:21:1::0;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:1;;;2970:36;3023:19;;2892:73:0::1;2646:402:1::0;2892:73:0::1;2975:28;2994:8;2975:18;:28::i;:::-;2812:198:::0;:::o;14270:651::-;-1:-1:-1;;;;;14396:18:0;;14388:68;;;;-1:-1:-1;;;14388:68:0;;4784:2:1;14388:68:0;;;4766:21:1;4823:2;4803:18;;;4796:30;4862:34;4842:18;;;4835:62;-1:-1:-1;;;4913:18:1;;;4906:35;4958:19;;14388:68:0;4582:401:1;14388:68:0;-1:-1:-1;;;;;14474:16:0;;14466:64;;;;-1:-1:-1;;;14466:64:0;;2444:2:1;14466:64:0;;;2426:21:1;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:1;;;2566:33;2616:19;;14466:64:0;2242:399:1;14466:64:0;-1:-1:-1;;;;;14612:15:0;;14590:19;14612:15;;;;;;;;;;;14645:21;;;;14637:72;;;;-1:-1:-1;;;14637:72:0;;4016:2:1;14637:72:0;;;3998:21:1;4055:2;4035:18;;;4028:30;4094:34;4074:18;;;4067:62;-1:-1:-1;;;4145:18:1;;;4138:36;4191:19;;14637:72:0;3814:402:1;14637:72:0;-1:-1:-1;;;;;14743:15:0;;;:9;:15;;;;;;;;;;;14761:20;;;14743:38;;14801:13;;;;;;;;:23;;14775:6;;14743:9;14801:23;;14775:6;;14801:23;:::i;:::-;;;;;;;;14855:2;-1:-1:-1;;;;;14840:26:0;14849:4;-1:-1:-1;;;;;14840:26:0;;14859:6;14840:26;;;;6305:25:1;;6293:2;6278:18;;6159:177;14840:26:0;;;;;;;;14877:37;14378:543;14270:651;;;:::o;16905:370::-;-1:-1:-1;;;;;17036:19:0;;17028:68;;;;-1:-1:-1;;;17028:68:0;;5190:2:1;17028:68:0;;;5172:21:1;5229:2;5209:18;;;5202:30;5268:34;5248:18;;;5241:62;-1:-1:-1;;;5319:18:1;;;5312:34;5363:19;;17028:68:0;4988:400:1;17028:68:0;-1:-1:-1;;;;;17114:21:0;;17106:68;;;;-1:-1:-1;;;17106:68:0;;3255:2:1;17106:68:0;;;3237:21:1;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:1;;;3377:32;3426:19;;17106:68:0;3053:398:1;17106:68:0;-1:-1:-1;;;;;17185:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17236:32;;6305:25:1;;;17236:32:0;;6278:18:1;17236:32:0;;;;;;;16905:370;;;:::o;17552:441::-;-1:-1:-1;;;;;10873:18:0;;;17682:24;10873:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;17748:37:0;;17744:243;;17829:6;17809:16;:26;;17801:68;;;;-1:-1:-1;;;17801:68:0;;3658:2:1;17801:68:0;;;3640:21:1;3697:2;3677:18;;;3670:30;3736:31;3716:18;;;3709:59;3785:18;;17801:68:0;3456:353:1;17801:68:0;17911:51;17920:5;17927:7;17955:6;17936:16;:25;17911:8;:51::i;15197:389::-;-1:-1:-1;;;;;15280:21:0;;15272:65;;;;-1:-1:-1;;;15272:65:0;;6001:2:1;15272:65:0;;;5983:21:1;6040:2;6020:18;;;6013:30;6079:33;6059:18;;;6052:61;6130:18;;15272:65:0;5799:355:1;15272:65:0;15424:6;15408:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15440:18:0;;:9;:18;;;;;;;;;;:28;;15462:6;;15440:9;:28;;15462:6;;15440:28;:::i;:::-;;;;-1:-1:-1;;15483:37:0;;6305:25:1;;;-1:-1:-1;;;;;15483:37:0;;;15500:1;;15483:37;;6293:2:1;6278:18;15483:37:0;;;;;;;19718:106;;:::o;3164:187::-;3256:6;;;-1:-1:-1;;;;;3272:17:0;;;-1:-1:-1;;;;;;3272:17:0;;;;;;;3304:40;;3256:6;;;3272:17;3256:6;;3304:40;;3237:16;;3304:40;3227:124;3164:187;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:1;2200:15;-1:-1:-1;;2196:29:1;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:1:o;4221:356::-;4423:2;4405:21;;;4442:18;;;4435:30;4501:34;4496:2;4481:18;;4474:62;4568:2;4553:18;;4221:356::o;6530:128::-;6570:3;6601:1;6597:6;6594:1;6591:13;6588:39;;;6607:18;;:::i;:::-;-1:-1:-1;6643:9:1;;6530:128::o;6663:168::-;6703:7;6769:1;6765;6761:6;6757:14;6754:1;6751:21;6746:1;6739:9;6732:17;6728:45;6725:71;;;6776:18;;:::i;:::-;-1:-1:-1;6816:9:1;;6663:168::o;6836:380::-;6915:1;6911:12;;;;6958;;;6979:61;;7033:4;7025:6;7021:17;7011:27;;6979:61;7086:2;7078:6;7075:14;7055:18;7052:38;7049:161;;;7132:10;7127:3;7123:20;7120:1;7113:31;7167:4;7164:1;7157:15;7195:4;7192:1;7185:15;7049:161;;6836:380;;;:::o;7221:127::-;7282:10;7277:3;7273:20;7270:1;7263:31;7313:4;7310:1;7303:15;7337:4;7334:1;7327:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "682800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24669",
								"balanceOf(address)": "2563",
								"buyTokens(address,uint256)": "infinite",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26922",
								"increaseAllowance(address,uint256)": "27012",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "28162",
								"symbol()": "infinite",
								"tokensPerEth()": "2361",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "51215",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19542,
									"end": 19558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9957,
									"end": 9959,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19542,
									"end": 19544,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19542,
									"end": 19558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19542,
									"end": 19558,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19542,
									"end": 19558,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 19542,
									"end": 19558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19535,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 19535,
									"end": 19558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19505,
									"end": 19558,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 19505,
									"end": 19558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19615,
									"end": 19712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "444F4C53"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "444C53"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8834,
									"end": 8839,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8831,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8856,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8849,
									"end": 8856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1815,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1834,
									"end": 1844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1834,
									"end": 1844,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 1844,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1834,
									"end": 1846,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1815,
									"end": 1833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1815,
									"end": 1847,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1815,
									"end": 1847,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1815,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19660,
									"end": 19705,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 19666,
									"end": 19676,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19688,
									"end": 19704,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 9957,
									"end": 9959,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19688,
									"end": 19690,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19688,
									"end": 19704,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19688,
									"end": 19704,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19688,
									"end": 19704,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 19688,
									"end": 19704,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19678,
									"end": 19685,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19678,
									"end": 19704,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19660,
									"end": 19665,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 19660,
									"end": 19705,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19660,
									"end": 19705,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 19660,
									"end": 19705,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 698,
									"end": 794,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 698,
									"end": 794,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 777,
									"end": 787,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 777,
									"end": 787,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 698,
									"end": 794,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3164,
									"end": 3351,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 3164,
									"end": 3351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3304,
									"end": 3344,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3304,
									"end": 3344,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3272,
									"end": 3289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3256,
									"end": 3262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3304,
									"end": 3344,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3304,
									"end": 3344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3237,
									"end": 3253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3237,
									"end": 3253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3304,
									"end": 3344,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3164,
									"end": 3351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3164,
									"end": 3351,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 15197,
									"end": 15586,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 15197,
									"end": 15586,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15280,
									"end": 15301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 15272,
									"end": 15337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15424,
									"end": 15430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15420,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15408,
									"end": 15420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15408,
									"end": 15430,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15458,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15462,
									"end": 15468,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15462,
									"end": 15468,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15462,
									"end": 15468,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15462,
									"end": 15468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15440,
									"end": 15468,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15500,
									"end": 15501,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15500,
									"end": 15501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15483,
									"end": 15520,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 15197,
									"end": 15586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15197,
									"end": 15586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15197,
									"end": 15586,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 556,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 653,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 614,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 614,
									"end": 653,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 669,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 669,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 821,
									"end": 826,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 863,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 846,
									"end": 854,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 843,
									"end": 864,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 915,
									"end": 919,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 911,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 913,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 920,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 897,
									"end": 901,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 894,
									"end": 921,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 891,
									"end": 944,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 891,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 891,
									"end": 944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 964,
									"end": 972,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 960,
									"end": 982,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1012,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 957,
									"end": 1012,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1012,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 957,
									"end": 1012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1095,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 835,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 839,
									"end": 842,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1111,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1179,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1244,
									"end": 1248,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1234,
									"end": 1242,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1249,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1250,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1116,
									"end": 1256,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1348,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1330,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1330,
									"end": 1410,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1330,
									"end": 1410,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1330,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1419,
									"end": 1495,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1495,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1419,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1597,
									"end": 1598,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1524,
									"end": 1583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1555,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 1555,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1592,
									"end": 1722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1619,
									"end": 1627,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1633,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1656,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1656,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1613,
									"end": 1656,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1636,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1707,
									"end": 1712,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1796,
									"end": 1804,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1809,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 1781,
									"end": 1785,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1791,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1810,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1770,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 1758,
									"end": 1766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1752,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1772,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1811,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1731,
									"end": 1890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1862,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1875,
									"end": 1880,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1875,
									"end": 1880,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1890,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1731,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1947,
									"end": 1955,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1945,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1922,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 1998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 1989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 1999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1978,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 2000,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2023,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 1965,
									"end": 2023,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2061,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2061,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 2067,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2072,
									"end": 2240,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2072,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2174,
									"end": 2175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2170,
									"end": 2176,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2180,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2181,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2156,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2158,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2137,
									"end": 2182,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2205,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2134,
									"end": 2205,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2185,
									"end": 2203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2225,
									"end": 2234,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2234,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2240,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2324,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2332,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2379,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2388,
									"end": 2449,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2442,
									"end": 2446,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2434,
									"end": 2440,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2447,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2449,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2388,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2497,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2487,
									"end": 2493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2484,
									"end": 2498,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2499,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2551,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2536,
									"end": 2539,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2532,
									"end": 2552,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2522,
									"end": 2553,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2580,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2573,
									"end": 2574,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2566,
									"end": 2581,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2608,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2601,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2594,
									"end": 2609,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2619,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2625,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2701,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2686,
									"end": 2689,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2682,
									"end": 2702,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2726,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2719,
									"end": 2720,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2712,
									"end": 2727,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2750,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2743,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2751,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2630,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19467,
									"end": 20117,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202444c16943e684619e880648178ee3005d7385d4561ed8149619646185e5e70f64736f6c63430008070033",
									".code": [
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "CBDD69B5"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "752881A"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 20117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1448,
											"end": 1635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6159,
											"end": 6336,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 9959,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6483,
											"end": 6519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6341,
											"end": 6525,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1240,
											"end": 1443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19505,
											"end": 19558,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10847,
											"end": 10854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9024,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19998,
											"end": 20010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19998,
											"end": 20010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19918,
											"end": 19922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19918,
											"end": 19922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19918,
											"end": 19922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19918,
											"end": 19922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19989,
											"end": 19995,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19967,
											"end": 20010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19967,
											"end": 20010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20016,
											"end": 20055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20026,
											"end": 20031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20041,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20043,
											"end": 20054,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20016,
											"end": 20025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20016,
											"end": 20055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20016,
											"end": 20055,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20016,
											"end": 20055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20070,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20084,
											"end": 20090,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20084,
											"end": 20090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20084,
											"end": 20090,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20084,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20104,
											"end": 20108,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20104,
											"end": 20108,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19833,
											"end": 20115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11298,
											"end": 11302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11368,
											"end": 11375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12188,
											"end": 12194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12215,
											"end": 12219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12221,
											"end": 12223,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12205,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12862,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12797,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2165,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19787,
											"end": 19817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19793,
											"end": 19795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19804,
											"end": 19816,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19804,
											"end": 19816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19797,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19787,
											"end": 19792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19787,
											"end": 19817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19787,
											"end": 19817,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19787,
											"end": 19817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2165,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2663,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9237,
											"end": 9244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5595,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5788,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5769,
											"end": 5788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5393,
											"end": 5794,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13717,
											"end": 13722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13752,
											"end": 13767,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13708,
											"end": 13768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10644,
											"end": 10672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2165,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2134,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2646,
											"end": 3048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2892,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2975,
											"end": 3003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2975,
											"end": 3003,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2975,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 3010,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4766,
											"end": 4787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4958,
											"end": 4977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4582,
											"end": 4983,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14474,
											"end": 14490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2242,
											"end": 2641,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3814,
											"end": 4216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14849,
											"end": 14853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14859,
											"end": 14865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6336,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14914,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 14877,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17036,
											"end": 17055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17036,
											"end": 17055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5363,
											"end": 5382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4988,
											"end": 5388,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3053,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17748,
											"end": 17785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17748,
											"end": 17785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17744,
											"end": 17987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 17835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3456,
											"end": 3809,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17920,
											"end": 17925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17927,
											"end": 17934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17955,
											"end": 17961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17936,
											"end": 17952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17936,
											"end": 17961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17911,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15197,
											"end": 15586,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15197,
											"end": 15586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15280,
											"end": 15301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5799,
											"end": 6154,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15272,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15424,
											"end": 15430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15430,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15440,
											"end": 15468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15520,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3164,
											"end": 3351,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3164,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3304,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3304,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3304,
											"end": 3344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3304,
											"end": 3344,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3351,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4221,
											"end": 4577,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4221,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4535,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4496,
											"end": 4498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6530,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6530,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 6588,
											"end": 6627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6663,
											"end": 6831,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6663,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6767,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6771,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6796,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6725,
											"end": 6796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6979,
											"end": 7040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7037,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 7025,
											"end": 7031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7040,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6979,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7075,
											"end": 7089,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7127,
											"end": 7130,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7123,
											"end": 7143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7171,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 7216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7221,
											"end": 7348,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7221,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7292,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7273,
											"end": 7293,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7317,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7310,
											"end": 7311,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7341,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7334,
											"end": 7335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7342,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens(address,uint256)": "0752881a",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokensPerEth()": "cbdd69b5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"DOLS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20_flat.sol\":8185:19408  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20_flat.sol\":8760:8873  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20_flat.sol\":8826:8839  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"ERC20_flat.sol\":8826:8831  _name */\n  0x03\n  swap1\n    /* \"ERC20_flat.sol\":8826:8839  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20_flat.sol\":8849:8866  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"ERC20_flat.sol\":8849:8856  _symbol */\n  0x04\n  swap1\n    /* \"ERC20_flat.sol\":8849:8866  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20_flat.sol\":8760:8873  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20_flat.sol\":8185:19408  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"ERC20_flat.sol\":8185:19408  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20_flat.sol\":8185:19408  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"ERC20_flat.sol\":10113:10125  _totalSupply */\n      sload(0x02)\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20_flat.sol\":10026:10132  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20_flat.sol\":9875:9966  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20_flat.sol\":9957:9959  18 */\n      0x12\n        /* \"#utility.yul\":5147:5183   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"ERC20_flat.sol\":9875:9966  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5005:5189   */\n      jump\n        /* \"ERC20_flat.sol\":12655:12891  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"ERC20_flat.sol\":10190:10315  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10290:10308  _balances[account] */\n      and\n        /* \"ERC20_flat.sol\":10264:10271  uint256 */\n      0x00\n        /* \"ERC20_flat.sol\":10290:10308  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20_flat.sol\":10190:10315  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20_flat.sol\":9149:9251  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"ERC20_flat.sol\":13378:13807  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"ERC20_flat.sol\":10511:10700  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ERC20_flat.sol\":10758:10907  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20_flat.sol\":10847:10854  uint256 */\n      0x00\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":10873:10884  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":10873:10900  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20_flat.sol\":10758:10907  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20_flat.sol\":8992:9005  string memory */\n      0x60\n        /* \"ERC20_flat.sol\":9024:9029  _name */\n      0x03\n        /* \"ERC20_flat.sol\":9017:9029  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20_flat.sol\":8938:9036  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20_flat.sol\":11298:11302  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":11352:11384  _approve(owner, spender, amount) */\n      tag_73\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup2\n        /* \"ERC20_flat.sol\":11368:11375  spender */\n      dup6\n        /* \"ERC20_flat.sol\":11377:11383  amount */\n      dup6\n        /* \"ERC20_flat.sol\":11352:11360  _approve */\n      tag_74\n        /* \"ERC20_flat.sol\":11352:11384  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"ERC20_flat.sol\":11401:11405  true */\n      0x01\n      swap4\n        /* \"ERC20_flat.sol\":11215:11412  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n    tag_32:\n        /* \"ERC20_flat.sol\":12101:12105  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":12157:12195  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"ERC20_flat.sol\":12173:12177  from */\n      dup6\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup3\n        /* \"ERC20_flat.sol\":12188:12194  amount */\n      dup6\n        /* \"ERC20_flat.sol\":12157:12172  _spendAllowance */\n      tag_79\n        /* \"ERC20_flat.sol\":12157:12195  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"ERC20_flat.sol\":12205:12232  _transfer(from, to, amount) */\n      tag_80\n        /* \"ERC20_flat.sol\":12215:12219  from */\n      dup6\n        /* \"ERC20_flat.sol\":12221:12223  to */\n      dup6\n        /* \"ERC20_flat.sol\":12225:12231  amount */\n      dup6\n        /* \"ERC20_flat.sol\":12205:12214  _transfer */\n      tag_81\n        /* \"ERC20_flat.sol\":12205:12232  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"ERC20_flat.sol\":12249:12253  true */\n      0x01\n      swap5\n        /* \"ERC20_flat.sol\":11974:12260  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":12655:12891  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":12743:12747  bool */\n      0x00\n        /* \"ERC20_flat.sol\":12822:12840  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":12822:12833  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":12822:12840  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":12822:12849  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":12743:12747  bool */\n      swap1\n      swap2\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      swap1\n        /* \"ERC20_flat.sol\":12797:12863  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup3\n      swap1\n        /* \"ERC20_flat.sol\":12822:12849  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"ERC20_flat.sol\":12822:12862  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"ERC20_flat.sol\":12852:12862  addedValue */\n      dup8\n      swap1\n        /* \"ERC20_flat.sol\":12822:12862  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"ERC20_flat.sol\":12797:12805  _approve */\n      tag_74\n        /* \"ERC20_flat.sol\":12797:12863  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":9149:9251  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20_flat.sol\":9205:9218  string memory */\n      0x60\n        /* \"ERC20_flat.sol\":9237:9244  _symbol */\n      0x04\n        /* \"ERC20_flat.sol\":9230:9244  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"ERC20_flat.sol\":13378:13807  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":13471:13475  bool */\n      0x00\n        /* \"ERC20_flat.sol\":13552:13570  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":13552:13563  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":13552:13570  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":13552:13579  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":13471:13475  bool */\n      swap1\n      swap2\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      swap1\n        /* \"ERC20_flat.sol\":13597:13632  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":13589:13674  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20_flat.sol\":13708:13768  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"ERC20_flat.sol\":13717:13722  owner */\n      dup3\n        /* \"ERC20_flat.sol\":13724:13731  spender */\n      dup7\n        /* \"ERC20_flat.sol\":13752:13767  subtractedValue */\n      dup7\n        /* \"ERC20_flat.sol\":13733:13749  currentAllowance */\n      dup5\n        /* \"ERC20_flat.sol\":13733:13767  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20_flat.sol\":13708:13716  _approve */\n      tag_74\n        /* \"ERC20_flat.sol\":13708:13768  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":10511:10700  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"ERC20_flat.sol\":10590:10594  bool */\n      0x00\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      caller\n        /* \"ERC20_flat.sol\":10644:10672  _transfer(owner, to, amount) */\n      tag_73\n        /* \"ERC20_flat.sol\":777:787  msg.sender */\n      dup2\n        /* \"ERC20_flat.sol\":10661:10663  to */\n      dup6\n        /* \"ERC20_flat.sol\":10665:10671  amount */\n      dup6\n        /* \"ERC20_flat.sol\":10644:10653  _transfer */\n      tag_81\n        /* \"ERC20_flat.sol\":10644:10672  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20_flat.sol\":16905:17275  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17036:17055  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"ERC20_flat.sol\":17028:17096  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17114:17135  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"ERC20_flat.sol\":17106:17174  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":17185:17203  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":17185:17196  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":17185:17203  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":17185:17212  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20_flat.sol\":17185:17221  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20_flat.sol\":17236:17268  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20_flat.sol\":16905:17275  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":17552:17993  function _spendAllowance(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"ERC20_flat.sol\":17682:17706  uint256 currentAllowance */\n      0x00\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20_flat.sol\":10873:10884  _allowances */\n      0x01\n        /* \"ERC20_flat.sol\":10873:10891  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20_flat.sol\":10873:10900  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"ERC20_flat.sol\":17748:17785  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"ERC20_flat.sol\":17744:17987  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"ERC20_flat.sol\":17829:17835  amount */\n      dup2\n        /* \"ERC20_flat.sol\":17809:17825  currentAllowance */\n      dup2\n        /* \"ERC20_flat.sol\":17809:17835  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_98\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"ERC20_flat.sol\":17801:17869  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_117:\n        /* \"ERC20_flat.sol\":17911:17962  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"ERC20_flat.sol\":17920:17925  owner */\n      dup5\n        /* \"ERC20_flat.sol\":17927:17934  spender */\n      dup5\n        /* \"ERC20_flat.sol\":17955:17961  amount */\n      dup5\n        /* \"ERC20_flat.sol\":17936:17952  currentAllowance */\n      dup5\n        /* \"ERC20_flat.sol\":17936:17961  currentAllowance - amount */\n      sub\n        /* \"ERC20_flat.sol\":17911:17919  _approve */\n      tag_74\n        /* \"ERC20_flat.sol\":17911:17962  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"ERC20_flat.sol\":17672:17993  {... */\n      pop\n        /* \"ERC20_flat.sol\":17552:17993  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20_flat.sol\":14270:14921  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14396:14414  from != address(0) */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"ERC20_flat.sol\":14388:14456  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14474:14490  to != address(0) */\n      dup3\n      and\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"ERC20_flat.sol\":14466:14530  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14612:14627  _balances[from] */\n      dup4\n      and\n        /* \"ERC20_flat.sol\":14590:14609  uint256 fromBalance */\n      0x00\n        /* \"ERC20_flat.sol\":14612:14627  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20_flat.sol\":14645:14666  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_98\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"ERC20_flat.sol\":14637:14709  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14743:14758  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20_flat.sol\":14743:14752  _balances */\n      0x00\n        /* \"ERC20_flat.sol\":14743:14758  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20_flat.sol\":14761:14781  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20_flat.sol\":14743:14781  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20_flat.sol\":14801:14814  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20_flat.sol\":14775:14781  amount */\n      dup5\n      swap3\n        /* \"ERC20_flat.sol\":14743:14752  _balances */\n      swap1\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      tag_133\n      swap1\n        /* \"ERC20_flat.sol\":14775:14781  amount */\n      dup5\n      swap1\n        /* \"ERC20_flat.sol\":14801:14824  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20_flat.sol\":14855:14857  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      and\n        /* \"ERC20_flat.sol\":14849:14853  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20_flat.sol\":14859:14865  amount */\n      dup5\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"ERC20_flat.sol\":14840:14866  Transfer(from, to, amount) */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20_flat.sol\":14877:14914  _afterTokenTransfer(from, to, amount) */\n      tag_120\n        /* \"ERC20_flat.sol\":18577:18698  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_140:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_142:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_144:\n        /* \"#utility.yul\":343:372   */\n      tag_145\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_140\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_147:\n        /* \"#utility.yul\":551:580   */\n      tag_148\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_140\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_149\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_140\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_151:\n        /* \"#utility.yul\":833:862   */\n      tag_152\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_153\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_155:\n        /* \"#utility.yul\":1149:1178   */\n      tag_156\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_159:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5419   */\n    tag_87:\n        /* \"#utility.yul\":5234:5237   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      not\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5268   */\n      gt\n        /* \"#utility.yul\":5252:5388   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5310:5320   */\n      0x4e487b71\n        /* \"#utility.yul\":5305:5308   */\n      0xe0\n        /* \"#utility.yul\":5301:5321   */\n      shl\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5291:5322   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x11\n        /* \"#utility.yul\":5342:5343   */\n      0x04\n        /* \"#utility.yul\":5335:5350   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5252:5388   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5404:5413   */\n      add\n      swap1\n        /* \"#utility.yul\":5194:5419   */\n      jump\t// out\n        /* \"#utility.yul\":5424:5804   */\n    tag_65:\n        /* \"#utility.yul\":5503:5504   */\n      0x01\n        /* \"#utility.yul\":5499:5511   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5546:5558   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5567:5628   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5567:5628   */\n    tag_175:\n        /* \"#utility.yul\":5674:5676   */\n      0x20\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5663:5677   */\n      lt\n        /* \"#utility.yul\":5643:5661   */\n      dup2\n        /* \"#utility.yul\":5640:5678   */\n      eq\n        /* \"#utility.yul\":5637:5798   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5720:5730   */\n      0x4e487b71\n        /* \"#utility.yul\":5715:5718   */\n      0xe0\n        /* \"#utility.yul\":5711:5731   */\n      shl\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5701:5732   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x22\n        /* \"#utility.yul\":5752:5753   */\n      0x04\n        /* \"#utility.yul\":5745:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5637:5798   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5424:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f8c4c39c5a331593a2a043e2593cdb788c83f4513f99596697eadeefb5249f0764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b6038038062000b608339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108ce80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b8565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077c565b610270565b604051601281526020016100c3565b6100df6101313660046107b8565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b8565b6102e2565b6100df6101883660046107b8565b610379565b6100f361019b366004610749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610837565b610387565b6060600480546101d59061085d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610837565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b60006020828403121561073957600080fd5b6107428261070b565b9392505050565b6000806040838503121561075c57600080fd5b6107658361070b565b91506107736020840161070b565b90509250929050565b60008060006060848603121561079157600080fd5b61079a8461070b565b92506107a86020850161070b565b9150604084013590509250925092565b600080604083850312156107cb57600080fd5b6107d48361070b565b946020939093013593505050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b81811115610821576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087157607f821691505b6020821081141561089257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f8c4c39c5a331593a2a043e2593cdb788c83f4513f99596697eadeefb5249f0764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB60 CODESIZE SUB DUP1 PUSH3 0xB60 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8CE DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x837 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x742 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x765 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x773 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A8 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x858 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x871 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x892 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xC4 0xC3 SWAP13 GAS CALLER ISZERO SWAP4 LOG2 LOG0 NUMBER 0xE2 MSIZE EXTCODECOPY 0xDB PUSH25 0x8C83F4513F99596697EADEEFB5249F0764736F6C6343000807 STOP CALLER ",
							"sourceMap": "8185:11223:0:-:0;;;8760:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8826:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;8849:17:0;;;;:7;;:17;;;;;:::i;:::-;;8760:113;;8185:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8185:11223:0;;;-1:-1:-1;8185:11223:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;8185:11223:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_742": {
									"entryPoint": 903,
									"id": 742,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_785": {
									"entryPoint": 1195,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_569": {
									"entryPoint": 1341,
									"id": 569,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": null,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 600,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_492": {
									"entryPoint": 738,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_450": {
									"entryPoint": 660,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_275": {
									"entryPoint": 454,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_285": {
									"entryPoint": 723,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 624,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_344": {
									"entryPoint": 889,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1240:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:1",
																"statements": []
															},
															"src": "1712:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:1"
															},
															"nodeType": "YulIf",
															"src": "1861:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:1",
														"type": ""
													}
												],
												"src": "1432:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:1",
														"type": ""
													}
												],
												"src": "2034:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:1",
														"type": ""
													}
												],
												"src": "2438:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:1",
														"type": ""
													}
												],
												"src": "2841:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:1",
														"type": ""
													}
												],
												"src": "3199:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:1",
														"type": ""
													}
												],
												"src": "3606:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:1",
														"type": ""
													}
												],
												"src": "4012:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													}
												],
												"src": "4417:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:1",
														"type": ""
													}
												],
												"src": "4823:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5071:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:1",
														"type": ""
													}
												],
												"src": "5005:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5265:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:1"
															},
															"nodeType": "YulIf",
															"src": "5252:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5397:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5225:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5228:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5234:3:1",
														"type": ""
													}
												],
												"src": "5194:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5506:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5520:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5550:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5524:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5599:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5577:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5570:26:1"
															},
															"nodeType": "YulIf",
															"src": "5567:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5687:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5715:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5720:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5711:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5643:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5663:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:38:1"
															},
															"nodeType": "YulIf",
															"src": "5637:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5468:6:1",
														"type": ""
													}
												],
												"src": "5424:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b8565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077c565b610270565b604051601281526020016100c3565b6100df6101313660046107b8565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b8565b6102e2565b6100df6101883660046107b8565b610379565b6100f361019b366004610749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610837565b610387565b6060600480546101d59061085d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610837565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b60006020828403121561073957600080fd5b6107428261070b565b9392505050565b6000806040838503121561075c57600080fd5b6107658361070b565b91506107736020840161070b565b90509250929050565b60008060006060848603121561079157600080fd5b61079a8461070b565b92506107a86020850161070b565b9150604084013590509250925092565b600080604083850312156107cb57600080fd5b6107d48361070b565b946020939093013593505050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b81811115610821576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087157607f821691505b6020821081141561089257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f8c4c39c5a331593a2a043e2593cdb788c83f4513f99596697eadeefb5249f0764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x837 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x742 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x765 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x773 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A8 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x858 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x871 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x892 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xC4 0xC3 SWAP13 GAS CALLER ISZERO SWAP4 LOG2 LOG0 NUMBER 0xE2 MSIZE EXTCODECOPY 0xDB PUSH25 0x8C83F4513F99596697EADEEFB5249F0764736F6C6343000807 STOP CALLER ",
							"sourceMap": "8185:11223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11215:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:1;;1398:22;1380:41;;1368:2;1353:18;11215:197:0;1240:187:1;10026:106:0;10113:12;;10026:106;;;4969:25:1;;;4957:2;4942:18;10026:106:0;4823:177:1;11974:286:0;;;;;;:::i;:::-;;:::i;9875:91::-;;;9957:2;5147:36:1;;5135:2;5120:18;9875:91:0;5005:184:1;12655:236:0;;;;;;:::i;:::-;;:::i;10190:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10290:18:0;10264:7;10290:18;;;;;;;;;;;;10190:125;9149:102;;;:::i;13378:429::-;;;;;;:::i;:::-;;:::i;10511:189::-;;;;;;:::i;:::-;;:::i;10758:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10873:18:0;;;10847:7;10873:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;10758:149;8938:98;8992:13;9024:5;9017:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:98;:::o;11215:197::-;11298:4;777:10;11352:32;777:10;11368:7;11377:6;11352:8;:32::i;:::-;-1:-1:-1;11401:4:0;;11215:197;-1:-1:-1;;;11215:197:0:o;11974:286::-;12101:4;777:10;12157:38;12173:4;777:10;12188:6;12157:15;:38::i;:::-;12205:27;12215:4;12221:2;12225:6;12205:9;:27::i;:::-;-1:-1:-1;12249:4:0;;11974:286;-1:-1:-1;;;;11974:286:0:o;12655:236::-;777:10;12743:4;12822:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;12822:27:0;;;;;;;;;;12743:4;;777:10;12797:66;;777:10;;12822:27;;:40;;12852:10;;12822:40;:::i;:::-;12797:8;:66::i;9149:102::-;9205:13;9237:7;9230:14;;;;;:::i;13378:429::-;777:10;13471:4;13552:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;13552:27:0;;;;;;;;;;13471:4;;777:10;13597:35;;;;13589:85;;;;-1:-1:-1;;;13589:85:0;;4619:2:1;13589:85:0;;;4601:21:1;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:1;;;4741:35;4793:19;;13589:85:0;;;;;;;;;13708:60;13717:5;13724:7;13752:15;13733:16;:34;13708:8;:60::i;10511:189::-;10590:4;777:10;10644:28;777:10;10661:2;10665:6;10644:9;:28::i;16905:370::-;-1:-1:-1;;;;;17036:19:0;;17028:68;;;;-1:-1:-1;;;17028:68:0;;4214:2:1;17028:68:0;;;4196:21:1;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:1;;;4336:34;4387:19;;17028:68:0;4012:400:1;17028:68:0;-1:-1:-1;;;;;17114:21:0;;17106:68;;;;-1:-1:-1;;;17106:68:0;;2640:2:1;17106:68:0;;;2622:21:1;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:1;;;2762:32;2811:19;;17106:68:0;2438:398:1;17106:68:0;-1:-1:-1;;;;;17185:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17236:32;;4969:25:1;;;17236:32:0;;4942:18:1;17236:32:0;;;;;;;16905:370;;;:::o;17552:441::-;-1:-1:-1;;;;;10873:18:0;;;17682:24;10873:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;17748:37:0;;17744:243;;17829:6;17809:16;:26;;17801:68;;;;-1:-1:-1;;;17801:68:0;;3043:2:1;17801:68:0;;;3025:21:1;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;17801:68:0;2841:353:1;17801:68:0;17911:51;17920:5;17927:7;17955:6;17936:16;:25;17911:8;:51::i;:::-;17672:321;17552:441;;;:::o;14270:651::-;-1:-1:-1;;;;;14396:18:0;;14388:68;;;;-1:-1:-1;;;14388:68:0;;3808:2:1;14388:68:0;;;3790:21:1;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:1;;;3930:35;3982:19;;14388:68:0;3606:401:1;14388:68:0;-1:-1:-1;;;;;14474:16:0;;14466:64;;;;-1:-1:-1;;;14466:64:0;;2236:2:1;14466:64:0;;;2218:21:1;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:1;;;2358:33;2408:19;;14466:64:0;2034:399:1;14466:64:0;-1:-1:-1;;;;;14612:15:0;;14590:19;14612:15;;;;;;;;;;;14645:21;;;;14637:72;;;;-1:-1:-1;;;14637:72:0;;3401:2:1;14637:72:0;;;3383:21:1;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:1;;;3523:36;3576:19;;14637:72:0;3199:402:1;14637:72:0;-1:-1:-1;;;;;14743:15:0;;;:9;:15;;;;;;;;;;;14761:20;;;14743:38;;14801:13;;;;;;;;:23;;14775:6;;14743:9;14801:23;;14775:6;;14801:23;:::i;:::-;;;;;;;;14855:2;-1:-1:-1;;;;;14840:26:0;14849:4;-1:-1:-1;;;;;14840:26:0;;14859:6;14840:26;;;;4969:25:1;;4957:2;4942:18;;4823:177;14840:26:0;;;;;;;;14877:37;18577:121;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:1;1992:15;-1:-1:-1;;1988:29:1;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:1:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:1;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26966",
								"increaseAllowance(address,uint256)": "26945",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8831,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8826,
									"end": 8831,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8826,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8856,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8849,
									"end": 8856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8849,
									"end": 8866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8760,
									"end": 8873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8185,
									"end": 19408,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8c4c39c5a331593a2a043e2593cdb788c83f4513f99596697eadeefb5249f0764736f6c63430008070033",
									".code": [
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 19408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 9959,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5005,
											"end": 5189,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10847,
											"end": 10854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9024,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11298,
											"end": 11302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11368,
											"end": 11375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11352,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11215,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12188,
											"end": 12194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12157,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12215,
											"end": 12219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12221,
											"end": 12223,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12205,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12205,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11974,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12655,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12862,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12822,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12797,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12797,
											"end": 12863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9149,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9237,
											"end": 9244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13378,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13589,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13717,
											"end": 13722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13752,
											"end": 13767,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13708,
											"end": 13768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10511,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10644,
											"end": 10672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17036,
											"end": 17055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17036,
											"end": 17055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 17028,
											"end": 17096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17106,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17268,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16905,
											"end": 17275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17748,
											"end": 17785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17748,
											"end": 17785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17744,
											"end": 17987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 17835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17801,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17920,
											"end": 17925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17927,
											"end": 17934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17955,
											"end": 17961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17936,
											"end": 17952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17936,
											"end": 17961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17911,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17911,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 17993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17993,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14270,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14388,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14474,
											"end": 14490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14637,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14814,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14849,
											"end": 14853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14859,
											"end": 14865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14866,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18577,
											"end": 18698,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5677,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5678,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20_flat.sol\":{\"keccak256\":\"0x8535696ea9360d0d0dec99357ce6d3da0f10a7149f9d276cee0e5dffc61b08f9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1d1d47df52a6abf3865b5359419b215b2cf26dc0e2af28dd64e5f00422ab025\",\"dweb:/ipfs/QmbYAurNAUogtoVwEggG2TaQLPq6ugbJgnXrrmgD7kRJz8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20_flat.sol": {
				"ast": {
					"absolutePath": "ERC20_flat.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"DOLS": [
							897
						],
						"ERC20": [
							808
						],
						"IERC20": [
							201
						],
						"IERC20Metadata": [
							224
						],
						"Ownable": [
							124
						]
					},
					"id": 898,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "144:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "169:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "684:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "760:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "777:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "777:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "770:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "707:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:9:0"
									},
									"scope": 21,
									"src": "698:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "867:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "884:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "884:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "877:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "851:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:16:0"
									},
									"scope": 21,
									"src": "800:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 898,
							"src": "666:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1012:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1562:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1562:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1038:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								21
							],
							"name": "Ownable",
							"nameLocation": "1551:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1592:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "1576:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1576:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1611:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1648:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1632:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1663:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:57:0"
									},
									"src": "1605:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1805:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1834:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1815:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1815:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1815:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1695:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1802:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1805:0:0"
									},
									"scope": 124,
									"src": "1791:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1985:30:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1995:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1860:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1939:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1976:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:9:0"
									},
									"scope": 124,
									"src": "1930:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2124:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "2142:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2142:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 58,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2153:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2153:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2142:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2134:68:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "2212:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2021:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 66,
									"name": "onlyOwner",
									"nameLocation": "2112:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:2:0"
									},
									"src": "2103:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2616:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2653:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2645:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2645:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2645:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2626:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2626:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2626:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2226:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2606:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2606:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2571:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2588:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:0"
									},
									"scope": 124,
									"src": "2562:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2882:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2900:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2920:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2912:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2912:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2912:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2900:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2924:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2892:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2892:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2975:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2975:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2669:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2872:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2872:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2821:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2847:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2839:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2838:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2882:0:0"
									},
									"scope": 124,
									"src": "2812:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3227:124:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3245:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3237:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3237:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3237:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3272:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3272:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3272:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3325:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3335:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3304:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "3299:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3016:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3173:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3191:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:0:0"
									},
									"scope": 124,
									"src": "3164:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 898,
							"src": "1533:1820:0",
							"usedErrors": []
						},
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3487:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3512:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC20",
							"nameLocation": "3593:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3606:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3686:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3697:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:9:0"
									},
									"scope": 201,
									"src": "3677:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3738:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3824:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3842:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3834:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3833:17:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3874:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:9:0"
									},
									"scope": 201,
									"src": "3815:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3889:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4105:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4122:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4114:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4134:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4113:28:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4160:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:6:0"
									},
									"scope": 201,
									"src": "4096:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4172:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4450:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:32:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4514:9:0"
									},
									"scope": 201,
									"src": "4441:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "4530:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5186:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5193:33:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:6:0"
									},
									"scope": 201,
									"src": "5177:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5257:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5558:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5588:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5580:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5610:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5602:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5622:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5570:72:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5661:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:6:0"
									},
									"scope": 201,
									"src": "5549:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5673:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 191,
									"name": "Transfer",
									"nameLocation": "5842:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5867:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5851:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5873:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5850:57:0"
									},
									"src": "5836:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "5914:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 200,
									"name": "Approval",
									"nameLocation": "6073:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6082:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6121:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6105:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6138:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6130:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6081:63:0"
									},
									"src": "6067:78:0"
								}
							],
							"scope": 898,
							"src": "3583:2564:0",
							"usedErrors": []
						},
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6304:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 204,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "6475:6:0"
									},
									"id": 205,
									"nodeType": "InheritanceSpecifier",
									"src": "6475:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "6330:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 224,
							"linearizedBaseContracts": [
								224,
								201
							],
							"name": "IERC20Metadata",
							"nameLocation": "6457:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "6488:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6556:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6560:2:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6586:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:15:0"
									},
									"scope": 224,
									"src": "6547:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "6607:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6683:2:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6709:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6708:15:0"
									},
									"scope": 224,
									"src": "6668:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "6730:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "6809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6817:2:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6843:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6842:7:0"
									},
									"scope": 224,
									"src": "6800:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 898,
							"src": "6447:405:0",
							"usedErrors": []
						},
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6984:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "8203:7:0"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "8203:7:0"
								},
								{
									"baseName": {
										"id": 229,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "8212:6:0"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "8212:6:0"
								},
								{
									"baseName": {
										"id": 231,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8220:14:0"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "8220:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "7012:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 808,
							"linearizedBaseContracts": [
								808,
								224,
								201,
								21
							],
							"name": "ERC20",
							"nameLocation": "8194:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "8277:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8241:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8249:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8241:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8260:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "8349:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8293:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 241,
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8301:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8293:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 240,
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8320:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "8312:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8331:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "8383:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8367:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8367:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "8417:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8402:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8402:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "8443:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 808,
									"src": "8428:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8428:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "8816:57:0",
										"statements": [
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "8826:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "8834:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8826:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "8826:13:0"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "8849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "8859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8849:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "8849:17:0"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "8457:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "8786:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "8772:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8772:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "8807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "8793:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8771:44:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8816:0:0"
									},
									"scope": 808,
									"src": "8760:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "9007:29:0",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "9024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "9017:12:0"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "8879:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8947:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8974:8:0"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8951:2:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8992:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8991:15:0"
									},
									"scope": 808,
									"src": "8938:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										217
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "9220:31:0",
										"statements": [
											{
												"expression": {
													"id": 282,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "9237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "9230:14:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "9042:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9158:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9187:8:0"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9164:2:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "9205:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9205:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9204:15:0"
									},
									"scope": 808,
									"src": "9149:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "9940:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9957:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "9950:9:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "9257:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "9884:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9915:8:0"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9892:2:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "9933:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9933:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9932:7:0"
									},
									"scope": 808,
									"src": "9875:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "10096:36:0",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 244,
													"src": "10113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "10106:19:0"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "9972:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10035:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10069:8:0"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10046:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "10087:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10086:9:0"
									},
									"scope": 808,
									"src": "10026:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										140
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "10273:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "10290:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10290:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "10283:25:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "10138:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10199:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10246:8:0"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "10209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10208:17:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "10264:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10263:9:0"
									},
									"scope": 808,
									"src": "10190:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "10596:104:0",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10614:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "10606:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10606:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "10622:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10622:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10606:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "10654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "10661:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10665:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "10644:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10644:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "10644:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10689:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "10682:11:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "10321:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "10520:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10572:8:0"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10537:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10549:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:28:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10590:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10589:6:0"
									},
									"scope": 808,
									"src": "10511:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10856:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 355,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "10873:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10873:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"id": 358,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "10892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10873:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 360,
												"nodeType": "Return",
												"src": "10866:34:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "10706:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10767:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10829:8:0"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10785:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10777:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10776:32:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10846:9:0"
									},
									"scope": 808,
									"src": "10758:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										170
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "11304:108:0",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11322:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "11314:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11314:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "11330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11330:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11314:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "11361:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11377:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "11352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11352:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "11352:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 385,
												"nodeType": "Return",
												"src": "11394:11:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10913:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11224:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11280:8:0"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11240:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11232:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11231:33:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11298:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11297:6:0"
									},
									"scope": 808,
									"src": "11215:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "12107:153:0",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "12125:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "12117:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12117:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12135:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12135:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12117:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12173:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "12179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12188:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "12157:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12157:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "12157:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12221:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "12205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12205:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12205:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "12242:11:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "11418:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11983:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12083:8:0"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12013:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12005:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12035:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12027:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11995:72:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12101:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12100:6:0"
									},
									"scope": 808,
									"src": "11974:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "12749:142:0",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12767:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "12759:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12759:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12775:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12775:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "12806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 438,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "12822:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 440,
																	"indexExpression": {
																		"id": 439,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "12834:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12822:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 442,
																"indexExpression": {
																	"id": 441,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "12841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12822:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 443,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "12852:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12822:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "12797:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12797:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "12797:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12880:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 448,
												"nodeType": "Return",
												"src": "12873:11:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "12266:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "12664:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12690:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12682:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "12707:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12699:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12681:37:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "12743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12742:6:0"
									},
									"scope": 808,
									"src": "12655:236:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "13477:330:0",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13495:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "13487:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13487:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13503:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13487:28:0"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "13533:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "13525:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 467,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "13552:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 469,
														"indexExpression": {
															"id": 468,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "13564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13552:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "13571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13552:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13525:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13597:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 475,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "13617:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13597:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13634:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13589:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13589:85:0"
											},
											{
												"id": 488,
												"nodeType": "UncheckedBlock",
												"src": "13684:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "13717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "13724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 483,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "13733:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 484,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "13752:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13733:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 480,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "13708:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13708:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 487,
														"nodeType": "ExpressionStatement",
														"src": "13708:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 490,
												"nodeType": "Return",
												"src": "13789:11:0"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "12897:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "13387:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "13430:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13422:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13404:42:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13471:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13471:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13470:6:0"
									},
									"scope": 808,
									"src": "13378:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "14378:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "14396:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 504,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14404:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14404:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14396:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14416:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14388:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "14388:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "14474:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14488:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14480:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14480:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14480:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14474:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14492:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14466:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "14466:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14562:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14568:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14572:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14541:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14541:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14541:38:0"
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "14598:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "14590:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"baseExpression": {
														"id": 530,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "14612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 532,
													"indexExpression": {
														"id": 531,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "14622:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14612:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14590:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "14645:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 536,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "14660:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14645:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14668:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14637:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "14637:72:0"
											},
											{
												"id": 549,
												"nodeType": "UncheckedBlock",
												"src": "14719:73:0",
												"statements": [
													{
														"expression": {
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 541,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "14743:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 543,
																"indexExpression": {
																	"id": 542,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "14753:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14743:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 544,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "14761:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 545,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "14775:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14761:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14743:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 548,
														"nodeType": "ExpressionStatement",
														"src": "14743:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 550,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "14801:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 552,
														"indexExpression": {
															"id": 551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14811:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14801:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 553,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "14818:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14801:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "14801:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 557,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14855:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "14840:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14840:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "EmitStatement",
												"src": "14835:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14897:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14903:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14907:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "14877:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14877:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "14877:37:0"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "13813:452:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14279:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14348:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14288:72:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14378:0:0"
									},
									"scope": 808,
									"src": "14270:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "15262:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "15280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15299:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15291:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 579,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15291:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15291:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15280:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15303:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15272:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "15272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15369:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 588,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15369:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15369:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15390:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "15348:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15348:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "15348:49:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "15408:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 597,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "15424:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15408:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "15408:22:0"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 600,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "15440:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 602,
														"indexExpression": {
															"id": 601,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15440:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 603,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "15462:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15440:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "15440:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15492:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15492:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15492:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "15483:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15483:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "EmitStatement",
												"src": "15478:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15559:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15551:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 616,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15551:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15551:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "15572:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "15531:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15531:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "15531:48:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "14927:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "15206:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "15212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15237:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "15229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15211:33:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15262:0:0"
									},
									"scope": 808,
									"src": "15197:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "15971:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "15989:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 635,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16000:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16000:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15989:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16012:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15981:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "15981:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16089:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16089:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16089:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16059:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16059:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "16059:49:0"
											},
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "16127:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "16119:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"baseExpression": {
														"id": 654,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "16144:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 656,
													"indexExpression": {
														"id": 655,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "16154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16144:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16119:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "16180:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "16198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16180:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16206:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16172:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "16172:71:0"
											},
											{
												"id": 673,
												"nodeType": "UncheckedBlock",
												"src": "16253:79:0",
												"statements": [
													{
														"expression": {
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 665,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "16277:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 667,
																"indexExpression": {
																	"id": 666,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "16287:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "16277:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "16298:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 669,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16315:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16298:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16277:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 672,
														"nodeType": "ExpressionStatement",
														"src": "16277:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "16341:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 675,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "16357:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16341:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "16341:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 679,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16405:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16397:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16397:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16397:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "16379:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16379:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "16374:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 688,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16464:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16456:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16456:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "16427:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16427:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "16427:48:0"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "15592:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "15915:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "15921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "15938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15920:33:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15971:0:0"
									},
									"scope": 808,
									"src": "15906:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "17018:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "17036:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17053:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 709,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17045:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17045:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17036:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17057:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17028:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "17028:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "17114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17125:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17125:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17125:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17114:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17137:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17106:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "17106:68:0"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 727,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "17185:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 730,
															"indexExpression": {
																"id": 728,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "17197:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17185:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 731,
														"indexExpression": {
															"id": 729,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "17204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17185:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "17215:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17185:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "17185:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 736,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "17245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "17252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "17261:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "17236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17236:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "EmitStatement",
												"src": "17231:37:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "16488:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16914:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16988:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16980:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16922:78:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17018:0:0"
									},
									"scope": 808,
									"src": "16905:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "17672:321:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "17690:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "17682:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"id": 755,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "17719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "17726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 754,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "17709:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17709:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17682:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 759,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "17748:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17773:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17773:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 760,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17768:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17768:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "17768:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17748:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "17744:243:0",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "17787:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "17809:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 768,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "17829:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17809:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17837:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 766,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17801:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17801:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "17801:68:0"
														},
														{
															"id": 781,
															"nodeType": "UncheckedBlock",
															"src": "17883:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 774,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "17920:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 775,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "17927:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 776,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "17936:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 777,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "17955:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17936:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 773,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "17911:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17911:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 780,
																	"nodeType": "ExpressionStatement",
																	"src": "17911:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "17281:266:0",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "17561:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17594:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17586:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17642:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "17634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17576:78:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17672:0:0"
									},
									"scope": 808,
									"src": "17552:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18696:2:0",
										"statements": []
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "17999:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "18586:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18616:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18646:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18638:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18666:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18606:72:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18696:0:0"
									},
									"scope": 808,
									"src": "18577:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "19404:2:0",
										"statements": []
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "18704:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "19295:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19332:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19324:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19354:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19346:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "19366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19314:72:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19404:0:0"
									},
									"scope": 808,
									"src": "19286:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 898,
							"src": "8185:11223:0",
							"usedErrors": []
						},
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19440:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 810,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 808,
										"src": "19484:5:0"
									},
									"id": 811,
									"nodeType": "InheritanceSpecifier",
									"src": "19484:5:0"
								},
								{
									"baseName": {
										"id": 812,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "19491:7:0"
									},
									"id": 813,
									"nodeType": "InheritanceSpecifier",
									"src": "19491:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 897,
							"linearizedBaseContracts": [
								897,
								124,
								808,
								224,
								201,
								21
							],
							"name": "DOLS",
							"nameLocation": "19476:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cbdd69b5",
									"id": 821,
									"mutability": "mutable",
									"name": "tokensPerEth",
									"nameLocation": "19520:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 897,
									"src": "19505:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19505:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 820,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 815,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "19535:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 819,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 816,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "19542:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 817,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 295,
													"src": "19548:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
														"typeString": "function () view returns (uint8)"
													}
												},
												"id": 818,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "19548:10:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "19542:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "19535:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "19600:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 897,
									"src": "19564:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 824,
										"keyType": {
											"id": 822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "19564:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 823,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "19583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "19650:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19666:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19666:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 837,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "19694:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19694:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "19688:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19678:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "19660:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19660:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "19660:45:0"
											}
										]
									},
									"id": 844,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "444f4c53",
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d3f1df8711251c9b57f83bf5ea346ef8f19e6e90270cbc2e15e115689a3fe287",
														"typeString": "literal_string \"DOLS\""
													},
													"value": "DOLS"
												},
												{
													"hexValue": "444c53",
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19643:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b0c85d77ea1c1eebe47c38d70323faf91244ce0123f1d604e97cb059b90cc0a2",
														"typeString": "literal_string \"DLS\""
													},
													"value": "DLS"
												}
											],
											"id": 830,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 827,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 808,
												"src": "19629:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19629:20:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19626:2:0"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19650:0:0"
									},
									"scope": 897,
									"src": "19615:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "19777:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "19793:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "19797:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 856,
																"name": "tokensPerEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "19804:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19797:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "19787:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19787:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "19787:30:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 850,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "19767:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19767:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "19727:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19740:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "19732:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "19744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19731:28:0"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19777:0:0"
									},
									"scope": 897,
									"src": "19718:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "19924:191:0",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "19940:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "19932:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 870,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19932:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 872,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "19948:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19948:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19932:28:0"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "amountToBuy",
														"nameLocation": "19975:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "19967:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "19989:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 878,
														"name": "tokensPerEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "19998:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19989:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19967:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 882,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "20026:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "20033:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "20043:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "20016:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20016:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "20016:39:0"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "20061:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 889,
														"indexExpression": {
															"id": 888,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "20071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20061:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 890,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "20084:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20061:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "20061:29:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 869,
												"id": 894,
												"nodeType": "Return",
												"src": "20097:11:0"
											}
										]
									},
									"functionSelector": "0752881a",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "19842:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "19860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "19852:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19878:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "19870:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19851:34:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "19918:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19917:6:0"
									},
									"scope": 897,
									"src": "19833:282:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 898,
							"src": "19467:650:0",
							"usedErrors": []
						}
					],
					"src": "144:19973:0"
				},
				"id": 0
			}
		}
	}
}